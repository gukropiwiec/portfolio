{"version":3,"file":"polyfills.b9f268963d3ef6ee.js","mappings":"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","names":["global","performance","name","mark","label","measure","symbolPrefix","__Zone_symbol_prefix","checkDuplicate","__symbol__","Zone","Error","constructor","parent","zoneSpec","this","_parent","_name","_properties","properties","_zoneDelegate","ZoneDelegate","Promise","patches","ZoneAwarePromise","root","zone","current","_currentZoneFrame","currentTask","_currentTask","fn","ignoreDuplicate","hasOwnProperty","perfName","_api","performanceMeasure","get","key","getZoneWith","fork","wrap","callback","source","_callback","intercept","runGuarded","arguments","run","applyThis","applyArgs","invoke","error","handleError","runTask","task","NO_ZONE","state","notScheduled","type","eventTask","macroTask","reEntryGuard","running","_transitionTo","scheduled","runCount","previousTask","data","isPeriodic","cancelFn","undefined","invokeTask","unknown","_updateTaskCount","scheduleTask","newZone","scheduling","zoneDelegates","_zoneDelegates","_zone","err","scheduleMicroTask","customSchedule","ZoneTask","microTask","scheduleMacroTask","customCancel","scheduleEventTask","cancelTask","canceling","count","i","length","DELEGATE_ZS","onHasTask","delegate","_","target","hasTaskState","hasTask","onScheduleTask","onInvokeTask","onCancelTask","parentDelegate","_taskCounts","_parentDelegate","_forkZS","onFork","_forkDlgt","_forkCurrZone","_interceptZS","onIntercept","_interceptDlgt","_interceptCurrZone","_invokeZS","onInvoke","_invokeDlgt","_invokeCurrZone","_handleErrorZS","onHandleError","_handleErrorDlgt","_handleErrorCurrZone","_scheduleTaskZS","_scheduleTaskDlgt","_scheduleTaskCurrZone","_invokeTaskZS","_invokeTaskDlgt","_invokeTaskCurrZone","_cancelTaskZS","_cancelTaskDlgt","_cancelTaskCurrZone","_hasTaskZS","_hasTaskDlgt","_hasTaskDlgtOwner","_hasTaskCurrZone","zoneSpecHasTask","targetZone","apply","returnTask","push","scheduleFn","value","isEmpty","counts","prev","next","change","options","_state","self","useG","call","args","_numberOfNestedTaskFrames","drainMicroTaskQueue","cancelScheduleRequest","toState","fromState1","fromState2","toString","handleId","Object","prototype","toJSON","symbolSetTimeout","symbolPromise","symbolThen","nativeMicroTaskQueuePromise","_microTaskQueue","_isDrainingMicrotaskQueue","resolve","nativeThen","then","queue","onUnhandledError","microtaskDrainDone","symbol","currentZoneFrame","noop","showUncaughtError","patchEventTarget","patchOnProperties","patchMethod","bindArguments","patchThen","patchMacroTask","patchEventPrototype","isIEOrEdge","getGlobalObjects","ObjectDefineProperty","ObjectGetOwnPropertyDescriptor","ObjectCreate","ArraySlice","patchClass","wrapWithCurrentZone","filterProperties","attachOriginToPatched","_redefineProperty","patchCallbacks","window","getOwnPropertyDescriptor","defineProperty","ObjectGetPrototypeOf","getPrototypeOf","create","Array","slice","ADD_EVENT_LISTENER_STR","REMOVE_EVENT_LISTENER_STR","ZONE_SYMBOL_ADD_EVENT_LISTENER","ZONE_SYMBOL_REMOVE_EVENT_LISTENER","TRUE_STR","FALSE_STR","ZONE_SYMBOL_PREFIX","zoneSymbol","isWindowExists","internalWindow","_global","NULL_ON_PROP_VALUE","propertyDesc","writable","set","isWebWorker","WorkerGlobalScope","isNode","process","isBrowser","HTMLElement","isMix","zoneSymbolEventNames","wrapFn","event","eventNameSymbol","listener","result","errorEvent","message","filename","lineno","colno","preventDefault","obj","prop","desc","enumerable","configurable","onPropPatchedSymbol","originalDescGet","originalDescSet","eventName","substr","newValue","previousValue","removeEventListener","addEventListener","REMOVE_ATTRIBUTE","removeAttribute","patchProperty","onProperties","j","originalInstanceKey","className","OriginalClass","a","instance","patchFn","proto","delegateName","isPropertyWritable","patchDelegate","funcName","metaCreator","setNative","cbIdx","meta","scheduleMacroTaskWithCurrentZone","patched","original","isDetectedIEOrEdge","ieOrEdge","ua","navigator","userAgent","indexOf","__load_patch","api","_uncaughtPromiseErrors","isDisableWrappingUncaughtPromiseRejection","e","rejection","console","stack","uncaughtPromiseError","shift","throwOriginal","handleUnhandledRejection","UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL","handler","reject","symbolState","symbolValue","symbolFinally","symbolParentPromiseValue","symbolParentPromiseState","UNRESOLVED","RESOLVED","REJECTED","promise","v","resolvePromise","CURRENT_TASK_TRACE_SYMBOL","onceWrapper","wasCalled","wrappedFunction","once","TypeError","clearRejectedNoCatch","makeResolver","trace","creationTrace","scheduleResolveOrReject","JSON","stringify","readableObjectToString","REJECTION_HANDLED_HANDLER","splice","chainPromise","onFulfilled","onRejected","promiseState","forwardResolution","forwardRejection","parentPromiseValue","isFinallyPromise","static","ZONE_AWARE_PROMISE_TO_STRING","values","res","rej","isThenable","onResolve","onReject","allWithCallback","thenCallback","status","errorCallback","reason","unresolvedCount","valueIndex","resolvedValues","curValueIndex","thenErr","executor","toStringTag","Symbol","species","C","catch","finally","onFinally","race","all","NativePromise","symbolThenPatched","Ctor","originalThen","wrapped","resultPromise","ctor","zoneify","originalFunctionToString","Function","ORIGINAL_DELEGATE_SYMBOL","PROMISE_SYMBOL","ERROR_SYMBOL","newFunctionToString","originalDelegate","nativePromise","nativeError","originalObjectToString","passiveSupported","OPTIMIZED_ZONE_EVENT_TASK_DATA","zoneSymbolEventNames$1","globalSources","EVENT_NAME_SYMBOL_REGX","RegExp","IMMEDIATE_PROPAGATION_SYMBOL","eventNameToString","falseEventName","trueEventName","symbolCapture","apis","patchOptions","ADD_EVENT_LISTENER","add","REMOVE_EVENT_LISTENER","rm","LISTENERS_EVENT_LISTENER","listeners","REMOVE_ALL_LISTENERS_EVENT_LISTENER","rmAll","zoneSymbolAddEventListener","ADD_EVENT_LISTENER_SOURCE","isRemoved","handleEvent","globalZoneAwareCallback","tasks","copyTasks","globalZoneAwareCaptureCallback","useGlobalCallback","validateHandler","vh","chkDup","returnTarget","rt","taskData","nativeAddEventListener","nativeRemoveEventListener","nativeListeners","nativeRemoveAllListeners","nativePrependEventListener","passive","capture","assign","prepend","isExisting","symbolEventNames","symbolEventName","existingTasks","existingTask","allRemoved","compare","diff","typeOfDelegate","unpatchedEvents","passiveEvents","makeAddListener","nativeListener","addSource","customScheduleFn","customCancelFn","transferEventName","isHandleEvent","buildEventListenerOptions","oe","prepareEventNames","constructorName","targetSource","k","unshift","PREPEND_EVENT_LISTENER","h","findEventTasks","captureTasks","removeTasks","keys","match","exec","evtName","results","patchEventTargetMethods","foundTasks","captureFalseTasks","captureTrueTasks","concat","Event","targetName","method","callbacks","nativeDelegate","opts","forEach","descriptor","windowEventNames","mediaElementEventNames","frameEventNames","frameSetEventNames","marqueeEventNames","XMLHttpRequestEventNames","IDBIndexEventNames","websocketEventNames","workerEventNames","eventNames","ignoreProperties","tip","filter","ip","targetIgnoreProperties","op","SYMBOL_BLACK_LISTED_EVENTS","SYMBOL_UNPATCHED_EVENTS","taskSymbol","setName","cancelName","nameSuffix","clearNative","tasksByHandleId","delay","clearTask","handle","ref","unref","bind","id","Z","legacyPatch","clear","patchTimer","blockingMethods","s","patchEvent","EVENT_TARGET","EventTarget","eventTargetPatch","XMLHttpRequestEventTarget","supportsWebSocket","WebSocket","__Zone_ignore_on_properties","ignoreErrorProperties","isIE","patchFilteredProperties","Document","SVGElement","Element","HTMLMediaElement","HTMLFrameSetElement","HTMLBodyElement","HTMLFrameElement","HTMLIFrameElement","HTMLMarqueeElement","Worker","XMLHttpRequest","IDBIndex","IDBRequest","IDBOpenDBRequest","IDBDatabase","IDBTransaction","IDBCursor","propertyDescriptorPatch","customElements","patchCustomElements","XMLHttpRequestPrototype","oriAddListener","oriRemoveListener","XMLHttpRequestEventTargetPrototype","READY_STATE_CHANGE","SCHEDULED","XHR_SCHEDULED","XHR_ERROR_BEFORE_SCHEDULED","XHR_LISTENER","newListener","readyState","DONE","aborted","loadTasks","oriInvoke","storedTask","XHR_TASK","sendNative","abortNative","openNative","XHR_SYNC","XHR_URL","fetchTaskAborting","fetchTaskScheduling","url","placeholderCallback","findPendingTask","patchXHR","geolocation","fnNames","patchPrototype","PromiseRejectionEvent","evt","findPromiseRejectionHandler"],"sourceRoot":"webpack:///","sources":["./node_modules/zone.js/fesm2015/zone.js"],"sourcesContent":["'use strict';\n/**\n * @license Angular v12.0.0-next.0\n * (c) 2010-2020 Google LLC. https://angular.io/\n * License: MIT\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst Zone$1 = (function (global) {\n    const performance = global['performance'];\n    function mark(name) {\n        performance && performance['mark'] && performance['mark'](name);\n    }\n    function performanceMeasure(name, label) {\n        performance && performance['measure'] && performance['measure'](name, label);\n    }\n    mark('Zone');\n    // Initialize before it's accessed below.\n    // __Zone_symbol_prefix global can be used to override the default zone\n    // symbol prefix with a custom one if needed.\n    const symbolPrefix = global['__Zone_symbol_prefix'] || '__zone_symbol__';\n    function __symbol__(name) {\n        return symbolPrefix + name;\n    }\n    const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n    if (global['Zone']) {\n        // if global['Zone'] already exists (maybe zone.js was already loaded or\n        // some other lib also registered a global object named Zone), we may need\n        // to throw an error, but sometimes user may not want this error.\n        // For example,\n        // we have two web pages, page1 includes zone.js, page2 doesn't.\n        // and the 1st time user load page1 and page2, everything work fine,\n        // but when user load page2 again, error occurs because global['Zone'] already exists.\n        // so we add a flag to let user choose whether to throw this error or not.\n        // By default, if existing Zone is from zone.js, we will not throw the error.\n        if (checkDuplicate || typeof global['Zone'].__symbol__ !== 'function') {\n            throw new Error('Zone already loaded.');\n        }\n        else {\n            return global['Zone'];\n        }\n    }\n    class Zone {\n        constructor(parent, zoneSpec) {\n            this._parent = parent;\n            this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n            this._properties = zoneSpec && zoneSpec.properties || {};\n            this._zoneDelegate =\n                new ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n        }\n        static assertZonePatched() {\n            if (global['Promise'] !== patches['ZoneAwarePromise']) {\n                throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\n                    'has been overwritten.\\n' +\n                    'Most likely cause is that a Promise polyfill has been loaded ' +\n                    'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\n                    'If you must load one, do so before loading zone.js.)');\n            }\n        }\n        static get root() {\n            let zone = Zone.current;\n            while (zone.parent) {\n                zone = zone.parent;\n            }\n            return zone;\n        }\n        static get current() {\n            return _currentZoneFrame.zone;\n        }\n        static get currentTask() {\n            return _currentTask;\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        static __load_patch(name, fn, ignoreDuplicate = false) {\n            if (patches.hasOwnProperty(name)) {\n                // `checkDuplicate` option is defined from global variable\n                // so it works for all modules.\n                // `ignoreDuplicate` can work for the specified module\n                if (!ignoreDuplicate && checkDuplicate) {\n                    throw Error('Already loaded patch: ' + name);\n                }\n            }\n            else if (!global['__Zone_disable_' + name]) {\n                const perfName = 'Zone:' + name;\n                mark(perfName);\n                patches[name] = fn(global, Zone, _api);\n                performanceMeasure(perfName, perfName);\n            }\n        }\n        get parent() {\n            return this._parent;\n        }\n        get name() {\n            return this._name;\n        }\n        get(key) {\n            const zone = this.getZoneWith(key);\n            if (zone)\n                return zone._properties[key];\n        }\n        getZoneWith(key) {\n            let current = this;\n            while (current) {\n                if (current._properties.hasOwnProperty(key)) {\n                    return current;\n                }\n                current = current._parent;\n            }\n            return null;\n        }\n        fork(zoneSpec) {\n            if (!zoneSpec)\n                throw new Error('ZoneSpec required!');\n            return this._zoneDelegate.fork(this, zoneSpec);\n        }\n        wrap(callback, source) {\n            if (typeof callback !== 'function') {\n                throw new Error('Expecting function got: ' + callback);\n            }\n            const _callback = this._zoneDelegate.intercept(this, callback, source);\n            const zone = this;\n            return function () {\n                return zone.runGuarded(_callback, this, arguments, source);\n            };\n        }\n        run(callback, applyThis, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runGuarded(callback, applyThis = null, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                try {\n                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runTask(task, applyThis, applyArgs) {\n            if (task.zone != this) {\n                throw new Error('A task can only be run in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            }\n            // https://github.com/angular/zone.js/issues/778, sometimes eventTask\n            // will run in notScheduled(canceled) state, we should not try to\n            // run such kind of task but just return\n            if (task.state === notScheduled && (task.type === eventTask || task.type === macroTask)) {\n                return;\n            }\n            const reEntryGuard = task.state != running;\n            reEntryGuard && task._transitionTo(running, scheduled);\n            task.runCount++;\n            const previousTask = _currentTask;\n            _currentTask = task;\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                if (task.type == macroTask && task.data && !task.data.isPeriodic) {\n                    task.cancelFn = undefined;\n                }\n                try {\n                    return this._zoneDelegate.invokeTask(this, task, applyThis, applyArgs);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                // if the task's state is notScheduled or unknown, then it has already been cancelled\n                // we should not reset the state to scheduled\n                if (task.state !== notScheduled && task.state !== unknown) {\n                    if (task.type == eventTask || (task.data && task.data.isPeriodic)) {\n                        reEntryGuard && task._transitionTo(scheduled, running);\n                    }\n                    else {\n                        task.runCount = 0;\n                        this._updateTaskCount(task, -1);\n                        reEntryGuard &&\n                            task._transitionTo(notScheduled, running, notScheduled);\n                    }\n                }\n                _currentZoneFrame = _currentZoneFrame.parent;\n                _currentTask = previousTask;\n            }\n        }\n        scheduleTask(task) {\n            if (task.zone && task.zone !== this) {\n                // check if the task was rescheduled, the newZone\n                // should not be the children of the original zone\n                let newZone = this;\n                while (newZone) {\n                    if (newZone === task.zone) {\n                        throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${task.zone.name}`);\n                    }\n                    newZone = newZone.parent;\n                }\n            }\n            task._transitionTo(scheduling, notScheduled);\n            const zoneDelegates = [];\n            task._zoneDelegates = zoneDelegates;\n            task._zone = this;\n            try {\n                task = this._zoneDelegate.scheduleTask(this, task);\n            }\n            catch (err) {\n                // should set task's state to unknown when scheduleTask throw error\n                // because the err may from reschedule, so the fromState maybe notScheduled\n                task._transitionTo(unknown, scheduling, notScheduled);\n                // TODO: @JiaLiPassion, should we check the result from handleError?\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            if (task._zoneDelegates === zoneDelegates) {\n                // we have to check because internally the delegate can reschedule the task.\n                this._updateTaskCount(task, 1);\n            }\n            if (task.state == scheduling) {\n                task._transitionTo(scheduled, scheduling);\n            }\n            return task;\n        }\n        scheduleMicroTask(source, callback, data, customSchedule) {\n            return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, undefined));\n        }\n        scheduleMacroTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));\n        }\n        scheduleEventTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));\n        }\n        cancelTask(task) {\n            if (task.zone != this)\n                throw new Error('A task can only be cancelled in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            task._transitionTo(canceling, scheduled, running);\n            try {\n                this._zoneDelegate.cancelTask(this, task);\n            }\n            catch (err) {\n                // if error occurs when cancelTask, transit the state to unknown\n                task._transitionTo(unknown, canceling);\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            this._updateTaskCount(task, -1);\n            task._transitionTo(notScheduled, canceling);\n            task.runCount = 0;\n            return task;\n        }\n        _updateTaskCount(task, count) {\n            const zoneDelegates = task._zoneDelegates;\n            if (count == -1) {\n                task._zoneDelegates = null;\n            }\n            for (let i = 0; i < zoneDelegates.length; i++) {\n                zoneDelegates[i]._updateTaskCount(task.type, count);\n            }\n        }\n    }\n    // tslint:disable-next-line:require-internal-with-underscore\n    Zone.__symbol__ = __symbol__;\n    const DELEGATE_ZS = {\n        name: '',\n        onHasTask: (delegate, _, target, hasTaskState) => delegate.hasTask(target, hasTaskState),\n        onScheduleTask: (delegate, _, target, task) => delegate.scheduleTask(target, task),\n        onInvokeTask: (delegate, _, target, task, applyThis, applyArgs) => delegate.invokeTask(target, task, applyThis, applyArgs),\n        onCancelTask: (delegate, _, target, task) => delegate.cancelTask(target, task)\n    };\n    class ZoneDelegate {\n        constructor(zone, parentDelegate, zoneSpec) {\n            this._taskCounts = { 'microTask': 0, 'macroTask': 0, 'eventTask': 0 };\n            this.zone = zone;\n            this._parentDelegate = parentDelegate;\n            this._forkZS = zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n            this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n            this._forkCurrZone =\n                zoneSpec && (zoneSpec.onFork ? this.zone : parentDelegate._forkCurrZone);\n            this._interceptZS =\n                zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n            this._interceptDlgt =\n                zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n            this._interceptCurrZone =\n                zoneSpec && (zoneSpec.onIntercept ? this.zone : parentDelegate._interceptCurrZone);\n            this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n            this._invokeDlgt =\n                zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n            this._invokeCurrZone =\n                zoneSpec && (zoneSpec.onInvoke ? this.zone : parentDelegate._invokeCurrZone);\n            this._handleErrorZS =\n                zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n            this._handleErrorDlgt =\n                zoneSpec && (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n            this._handleErrorCurrZone =\n                zoneSpec && (zoneSpec.onHandleError ? this.zone : parentDelegate._handleErrorCurrZone);\n            this._scheduleTaskZS =\n                zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n            this._scheduleTaskDlgt = zoneSpec &&\n                (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n            this._scheduleTaskCurrZone =\n                zoneSpec && (zoneSpec.onScheduleTask ? this.zone : parentDelegate._scheduleTaskCurrZone);\n            this._invokeTaskZS =\n                zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n            this._invokeTaskDlgt =\n                zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n            this._invokeTaskCurrZone =\n                zoneSpec && (zoneSpec.onInvokeTask ? this.zone : parentDelegate._invokeTaskCurrZone);\n            this._cancelTaskZS =\n                zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n            this._cancelTaskDlgt =\n                zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n            this._cancelTaskCurrZone =\n                zoneSpec && (zoneSpec.onCancelTask ? this.zone : parentDelegate._cancelTaskCurrZone);\n            this._hasTaskZS = null;\n            this._hasTaskDlgt = null;\n            this._hasTaskDlgtOwner = null;\n            this._hasTaskCurrZone = null;\n            const zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;\n            const parentHasTask = parentDelegate && parentDelegate._hasTaskZS;\n            if (zoneSpecHasTask || parentHasTask) {\n                // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such\n                // a case all task related interceptors must go through this ZD. We can't short circuit it.\n                this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;\n                this._hasTaskDlgt = parentDelegate;\n                this._hasTaskDlgtOwner = this;\n                this._hasTaskCurrZone = zone;\n                if (!zoneSpec.onScheduleTask) {\n                    this._scheduleTaskZS = DELEGATE_ZS;\n                    this._scheduleTaskDlgt = parentDelegate;\n                    this._scheduleTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onInvokeTask) {\n                    this._invokeTaskZS = DELEGATE_ZS;\n                    this._invokeTaskDlgt = parentDelegate;\n                    this._invokeTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onCancelTask) {\n                    this._cancelTaskZS = DELEGATE_ZS;\n                    this._cancelTaskDlgt = parentDelegate;\n                    this._cancelTaskCurrZone = this.zone;\n                }\n            }\n        }\n        fork(targetZone, zoneSpec) {\n            return this._forkZS ? this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec) :\n                new Zone(targetZone, zoneSpec);\n        }\n        intercept(targetZone, callback, source) {\n            return this._interceptZS ?\n                this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source) :\n                callback;\n        }\n        invoke(targetZone, callback, applyThis, applyArgs, source) {\n            return this._invokeZS ? this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source) :\n                callback.apply(applyThis, applyArgs);\n        }\n        handleError(targetZone, error) {\n            return this._handleErrorZS ?\n                this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error) :\n                true;\n        }\n        scheduleTask(targetZone, task) {\n            let returnTask = task;\n            if (this._scheduleTaskZS) {\n                if (this._hasTaskZS) {\n                    returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);\n                }\n                // clang-format off\n                returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\n                // clang-format on\n                if (!returnTask)\n                    returnTask = task;\n            }\n            else {\n                if (task.scheduleFn) {\n                    task.scheduleFn(task);\n                }\n                else if (task.type == microTask) {\n                    scheduleMicroTask(task);\n                }\n                else {\n                    throw new Error('Task is missing scheduleFn.');\n                }\n            }\n            return returnTask;\n        }\n        invokeTask(targetZone, task, applyThis, applyArgs) {\n            return this._invokeTaskZS ? this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs) :\n                task.callback.apply(applyThis, applyArgs);\n        }\n        cancelTask(targetZone, task) {\n            let value;\n            if (this._cancelTaskZS) {\n                value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\n            }\n            else {\n                if (!task.cancelFn) {\n                    throw Error('Task is not cancelable');\n                }\n                value = task.cancelFn(task);\n            }\n            return value;\n        }\n        hasTask(targetZone, isEmpty) {\n            // hasTask should not throw error so other ZoneDelegate\n            // can still trigger hasTask callback\n            try {\n                this._hasTaskZS &&\n                    this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\n            }\n            catch (err) {\n                this.handleError(targetZone, err);\n            }\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _updateTaskCount(type, count) {\n            const counts = this._taskCounts;\n            const prev = counts[type];\n            const next = counts[type] = prev + count;\n            if (next < 0) {\n                throw new Error('More tasks executed then were scheduled.');\n            }\n            if (prev == 0 || next == 0) {\n                const isEmpty = {\n                    microTask: counts['microTask'] > 0,\n                    macroTask: counts['macroTask'] > 0,\n                    eventTask: counts['eventTask'] > 0,\n                    change: type\n                };\n                this.hasTask(this.zone, isEmpty);\n            }\n        }\n    }\n    class ZoneTask {\n        constructor(type, source, callback, options, scheduleFn, cancelFn) {\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zone = null;\n            this.runCount = 0;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zoneDelegates = null;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._state = 'notScheduled';\n            this.type = type;\n            this.source = source;\n            this.data = options;\n            this.scheduleFn = scheduleFn;\n            this.cancelFn = cancelFn;\n            if (!callback) {\n                throw new Error('callback is not defined');\n            }\n            this.callback = callback;\n            const self = this;\n            // TODO: @JiaLiPassion options should have interface\n            if (type === eventTask && options && options.useG) {\n                this.invoke = ZoneTask.invokeTask;\n            }\n            else {\n                this.invoke = function () {\n                    return ZoneTask.invokeTask.call(global, self, this, arguments);\n                };\n            }\n        }\n        static invokeTask(task, target, args) {\n            if (!task) {\n                task = this;\n            }\n            _numberOfNestedTaskFrames++;\n            try {\n                task.runCount++;\n                return task.zone.runTask(task, target, args);\n            }\n            finally {\n                if (_numberOfNestedTaskFrames == 1) {\n                    drainMicroTaskQueue();\n                }\n                _numberOfNestedTaskFrames--;\n            }\n        }\n        get zone() {\n            return this._zone;\n        }\n        get state() {\n            return this._state;\n        }\n        cancelScheduleRequest() {\n            this._transitionTo(notScheduled, scheduling);\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _transitionTo(toState, fromState1, fromState2) {\n            if (this._state === fromState1 || this._state === fromState2) {\n                this._state = toState;\n                if (toState == notScheduled) {\n                    this._zoneDelegates = null;\n                }\n            }\n            else {\n                throw new Error(`${this.type} '${this.source}': can not transition to '${toState}', expecting state '${fromState1}'${fromState2 ? ' or \\'' + fromState2 + '\\'' : ''}, was '${this._state}'.`);\n            }\n        }\n        toString() {\n            if (this.data && typeof this.data.handleId !== 'undefined') {\n                return this.data.handleId.toString();\n            }\n            else {\n                return Object.prototype.toString.call(this);\n            }\n        }\n        // add toJSON method to prevent cyclic error when\n        // call JSON.stringify(zoneTask)\n        toJSON() {\n            return {\n                type: this.type,\n                state: this.state,\n                source: this.source,\n                zone: this.zone.name,\n                runCount: this.runCount\n            };\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  MICROTASK QUEUE\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const symbolSetTimeout = __symbol__('setTimeout');\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    let _microTaskQueue = [];\n    let _isDrainingMicrotaskQueue = false;\n    let nativeMicroTaskQueuePromise;\n    function scheduleMicroTask(task) {\n        // if we are not running in any task, and there has not been anything scheduled\n        // we must bootstrap the initial task creation by manually scheduling the drain\n        if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\n            // We are not running in Task, so we need to kickstart the microtask queue.\n            if (!nativeMicroTaskQueuePromise) {\n                if (global[symbolPromise]) {\n                    nativeMicroTaskQueuePromise = global[symbolPromise].resolve(0);\n                }\n            }\n            if (nativeMicroTaskQueuePromise) {\n                let nativeThen = nativeMicroTaskQueuePromise[symbolThen];\n                if (!nativeThen) {\n                    // native Promise is not patchable, we need to use `then` directly\n                    // issue 1078\n                    nativeThen = nativeMicroTaskQueuePromise['then'];\n                }\n                nativeThen.call(nativeMicroTaskQueuePromise, drainMicroTaskQueue);\n            }\n            else {\n                global[symbolSetTimeout](drainMicroTaskQueue, 0);\n            }\n        }\n        task && _microTaskQueue.push(task);\n    }\n    function drainMicroTaskQueue() {\n        if (!_isDrainingMicrotaskQueue) {\n            _isDrainingMicrotaskQueue = true;\n            while (_microTaskQueue.length) {\n                const queue = _microTaskQueue;\n                _microTaskQueue = [];\n                for (let i = 0; i < queue.length; i++) {\n                    const task = queue[i];\n                    try {\n                        task.zone.runTask(task, null, null);\n                    }\n                    catch (error) {\n                        _api.onUnhandledError(error);\n                    }\n                }\n            }\n            _api.microtaskDrainDone();\n            _isDrainingMicrotaskQueue = false;\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  BOOTSTRAP\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const NO_ZONE = { name: 'NO ZONE' };\n    const notScheduled = 'notScheduled', scheduling = 'scheduling', scheduled = 'scheduled', running = 'running', canceling = 'canceling', unknown = 'unknown';\n    const microTask = 'microTask', macroTask = 'macroTask', eventTask = 'eventTask';\n    const patches = {};\n    const _api = {\n        symbol: __symbol__,\n        currentZoneFrame: () => _currentZoneFrame,\n        onUnhandledError: noop,\n        microtaskDrainDone: noop,\n        scheduleMicroTask: scheduleMicroTask,\n        showUncaughtError: () => !Zone[__symbol__('ignoreConsoleErrorUncaughtError')],\n        patchEventTarget: () => [],\n        patchOnProperties: noop,\n        patchMethod: () => noop,\n        bindArguments: () => [],\n        patchThen: () => noop,\n        patchMacroTask: () => noop,\n        patchEventPrototype: () => noop,\n        isIEOrEdge: () => false,\n        getGlobalObjects: () => undefined,\n        ObjectDefineProperty: () => noop,\n        ObjectGetOwnPropertyDescriptor: () => undefined,\n        ObjectCreate: () => undefined,\n        ArraySlice: () => [],\n        patchClass: () => noop,\n        wrapWithCurrentZone: () => noop,\n        filterProperties: () => [],\n        attachOriginToPatched: () => noop,\n        _redefineProperty: () => noop,\n        patchCallbacks: () => noop\n    };\n    let _currentZoneFrame = { parent: null, zone: new Zone(null, null) };\n    let _currentTask = null;\n    let _numberOfNestedTaskFrames = 0;\n    function noop() { }\n    performanceMeasure('Zone', 'Zone');\n    return global['Zone'] = Zone;\n})(typeof window !== 'undefined' && window || typeof self !== 'undefined' && self || global);\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Suppress closure compiler errors about unknown 'Zone' variable\n * @fileoverview\n * @suppress {undefinedVars,globalThis,missingRequire}\n */\n/// <reference types=\"node\"/>\n// issue #989, to reduce bundle size, use short name\n/** Object.getOwnPropertyDescriptor */\nconst ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n/** Object.defineProperty */\nconst ObjectDefineProperty = Object.defineProperty;\n/** Object.getPrototypeOf */\nconst ObjectGetPrototypeOf = Object.getPrototypeOf;\n/** Object.create */\nconst ObjectCreate = Object.create;\n/** Array.prototype.slice */\nconst ArraySlice = Array.prototype.slice;\n/** addEventListener string const */\nconst ADD_EVENT_LISTENER_STR = 'addEventListener';\n/** removeEventListener string const */\nconst REMOVE_EVENT_LISTENER_STR = 'removeEventListener';\n/** zoneSymbol addEventListener */\nconst ZONE_SYMBOL_ADD_EVENT_LISTENER = Zone.__symbol__(ADD_EVENT_LISTENER_STR);\n/** zoneSymbol removeEventListener */\nconst ZONE_SYMBOL_REMOVE_EVENT_LISTENER = Zone.__symbol__(REMOVE_EVENT_LISTENER_STR);\n/** true string const */\nconst TRUE_STR = 'true';\n/** false string const */\nconst FALSE_STR = 'false';\n/** Zone symbol prefix string const. */\nconst ZONE_SYMBOL_PREFIX = Zone.__symbol__('');\nfunction wrapWithCurrentZone(callback, source) {\n    return Zone.current.wrap(callback, source);\n}\nfunction scheduleMacroTaskWithCurrentZone(source, callback, data, customSchedule, customCancel) {\n    return Zone.current.scheduleMacroTask(source, callback, data, customSchedule, customCancel);\n}\nconst zoneSymbol = Zone.__symbol__;\nconst isWindowExists = typeof window !== 'undefined';\nconst internalWindow = isWindowExists ? window : undefined;\nconst _global = isWindowExists && internalWindow || typeof self === 'object' && self || global;\nconst REMOVE_ATTRIBUTE = 'removeAttribute';\nconst NULL_ON_PROP_VALUE = [null];\nfunction bindArguments(args, source) {\n    for (let i = args.length - 1; i >= 0; i--) {\n        if (typeof args[i] === 'function') {\n            args[i] = wrapWithCurrentZone(args[i], source + '_' + i);\n        }\n    }\n    return args;\n}\nfunction patchPrototype(prototype, fnNames) {\n    const source = prototype.constructor['name'];\n    for (let i = 0; i < fnNames.length; i++) {\n        const name = fnNames[i];\n        const delegate = prototype[name];\n        if (delegate) {\n            const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, name);\n            if (!isPropertyWritable(prototypeDesc)) {\n                continue;\n            }\n            prototype[name] = ((delegate) => {\n                const patched = function () {\n                    return delegate.apply(this, bindArguments(arguments, source + '.' + name));\n                };\n                attachOriginToPatched(patched, delegate);\n                return patched;\n            })(delegate);\n        }\n    }\n}\nfunction isPropertyWritable(propertyDesc) {\n    if (!propertyDesc) {\n        return true;\n    }\n    if (propertyDesc.writable === false) {\n        return false;\n    }\n    return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');\n}\nconst isWebWorker = (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope);\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isNode = (!('nw' in _global) && typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]');\nconst isBrowser = !isNode && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);\n// we are in electron of nw, so we are both browser and nodejs\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isMix = typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]' && !isWebWorker &&\n    !!(isWindowExists && internalWindow['HTMLElement']);\nconst zoneSymbolEventNames = {};\nconst wrapFn = function (event) {\n    // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n    // event will be undefined, so we need to use window.event\n    event = event || _global.event;\n    if (!event) {\n        return;\n    }\n    let eventNameSymbol = zoneSymbolEventNames[event.type];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames[event.type] = zoneSymbol('ON_PROPERTY' + event.type);\n    }\n    const target = this || event.target || _global;\n    const listener = target[eventNameSymbol];\n    let result;\n    if (isBrowser && target === internalWindow && event.type === 'error') {\n        // window.onerror have different signiture\n        // https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror#window.onerror\n        // and onerror callback will prevent default when callback return true\n        const errorEvent = event;\n        result = listener &&\n            listener.call(this, errorEvent.message, errorEvent.filename, errorEvent.lineno, errorEvent.colno, errorEvent.error);\n        if (result === true) {\n            event.preventDefault();\n        }\n    }\n    else {\n        result = listener && listener.apply(this, arguments);\n        if (result != undefined && !result) {\n            event.preventDefault();\n        }\n    }\n    return result;\n};\nfunction patchProperty(obj, prop, prototype) {\n    let desc = ObjectGetOwnPropertyDescriptor(obj, prop);\n    if (!desc && prototype) {\n        // when patch window object, use prototype to check prop exist or not\n        const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);\n        if (prototypeDesc) {\n            desc = { enumerable: true, configurable: true };\n        }\n    }\n    // if the descriptor not exists or is not configurable\n    // just return\n    if (!desc || !desc.configurable) {\n        return;\n    }\n    const onPropPatchedSymbol = zoneSymbol('on' + prop + 'patched');\n    if (obj.hasOwnProperty(onPropPatchedSymbol) && obj[onPropPatchedSymbol]) {\n        return;\n    }\n    // A property descriptor cannot have getter/setter and be writable\n    // deleting the writable and value properties avoids this error:\n    //\n    // TypeError: property descriptors must not specify a value or be writable when a\n    // getter or setter has been specified\n    delete desc.writable;\n    delete desc.value;\n    const originalDescGet = desc.get;\n    const originalDescSet = desc.set;\n    // substr(2) cuz 'onclick' -> 'click', etc\n    const eventName = prop.substr(2);\n    let eventNameSymbol = zoneSymbolEventNames[eventName];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames[eventName] = zoneSymbol('ON_PROPERTY' + eventName);\n    }\n    desc.set = function (newValue) {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return;\n        }\n        let previousValue = target[eventNameSymbol];\n        if (previousValue) {\n            target.removeEventListener(eventName, wrapFn);\n        }\n        // issue #978, when onload handler was added before loading zone.js\n        // we should remove it with originalDescSet\n        if (originalDescSet) {\n            originalDescSet.apply(target, NULL_ON_PROP_VALUE);\n        }\n        if (typeof newValue === 'function') {\n            target[eventNameSymbol] = newValue;\n            target.addEventListener(eventName, wrapFn, false);\n        }\n        else {\n            target[eventNameSymbol] = null;\n        }\n    };\n    // The getter would return undefined for unassigned properties but the default value of an\n    // unassigned property is null\n    desc.get = function () {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return null;\n        }\n        const listener = target[eventNameSymbol];\n        if (listener) {\n            return listener;\n        }\n        else if (originalDescGet) {\n            // result will be null when use inline event attribute,\n            // such as <button onclick=\"func();\">OK</button>\n            // because the onclick function is internal raw uncompiled handler\n            // the onclick will be evaluated when first time event was triggered or\n            // the property is accessed, https://github.com/angular/zone.js/issues/525\n            // so we should use original native get to retrieve the handler\n            let value = originalDescGet && originalDescGet.call(this);\n            if (value) {\n                desc.set.call(this, value);\n                if (typeof target[REMOVE_ATTRIBUTE] === 'function') {\n                    target.removeAttribute(prop);\n                }\n                return value;\n            }\n        }\n        return null;\n    };\n    ObjectDefineProperty(obj, prop, desc);\n    obj[onPropPatchedSymbol] = true;\n}\nfunction patchOnProperties(obj, properties, prototype) {\n    if (properties) {\n        for (let i = 0; i < properties.length; i++) {\n            patchProperty(obj, 'on' + properties[i], prototype);\n        }\n    }\n    else {\n        const onProperties = [];\n        for (const prop in obj) {\n            if (prop.substr(0, 2) == 'on') {\n                onProperties.push(prop);\n            }\n        }\n        for (let j = 0; j < onProperties.length; j++) {\n            patchProperty(obj, onProperties[j], prototype);\n        }\n    }\n}\nconst originalInstanceKey = zoneSymbol('originalInstance');\n// wrap some native API on `window`\nfunction patchClass(className) {\n    const OriginalClass = _global[className];\n    if (!OriginalClass)\n        return;\n    // keep original class in global\n    _global[zoneSymbol(className)] = OriginalClass;\n    _global[className] = function () {\n        const a = bindArguments(arguments, className);\n        switch (a.length) {\n            case 0:\n                this[originalInstanceKey] = new OriginalClass();\n                break;\n            case 1:\n                this[originalInstanceKey] = new OriginalClass(a[0]);\n                break;\n            case 2:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1]);\n                break;\n            case 3:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);\n                break;\n            case 4:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);\n                break;\n            default:\n                throw new Error('Arg list too long.');\n        }\n    };\n    // attach original delegate to patched function\n    attachOriginToPatched(_global[className], OriginalClass);\n    const instance = new OriginalClass(function () { });\n    let prop;\n    for (prop in instance) {\n        // https://bugs.webkit.org/show_bug.cgi?id=44721\n        if (className === 'XMLHttpRequest' && prop === 'responseBlob')\n            continue;\n        (function (prop) {\n            if (typeof instance[prop] === 'function') {\n                _global[className].prototype[prop] = function () {\n                    return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);\n                };\n            }\n            else {\n                ObjectDefineProperty(_global[className].prototype, prop, {\n                    set: function (fn) {\n                        if (typeof fn === 'function') {\n                            this[originalInstanceKey][prop] = wrapWithCurrentZone(fn, className + '.' + prop);\n                            // keep callback in wrapped function so we can\n                            // use it in Function.prototype.toString to return\n                            // the native one.\n                            attachOriginToPatched(this[originalInstanceKey][prop], fn);\n                        }\n                        else {\n                            this[originalInstanceKey][prop] = fn;\n                        }\n                    },\n                    get: function () {\n                        return this[originalInstanceKey][prop];\n                    }\n                });\n            }\n        }(prop));\n    }\n    for (prop in OriginalClass) {\n        if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {\n            _global[className][prop] = OriginalClass[prop];\n        }\n    }\n}\nfunction patchMethod(target, name, patchFn) {\n    let proto = target;\n    while (proto && !proto.hasOwnProperty(name)) {\n        proto = ObjectGetPrototypeOf(proto);\n    }\n    if (!proto && target[name]) {\n        // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n        proto = target;\n    }\n    const delegateName = zoneSymbol(name);\n    let delegate = null;\n    if (proto && (!(delegate = proto[delegateName]) || !proto.hasOwnProperty(delegateName))) {\n        delegate = proto[delegateName] = proto[name];\n        // check whether proto[name] is writable\n        // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob\n        const desc = proto && ObjectGetOwnPropertyDescriptor(proto, name);\n        if (isPropertyWritable(desc)) {\n            const patchDelegate = patchFn(delegate, delegateName, name);\n            proto[name] = function () {\n                return patchDelegate(this, arguments);\n            };\n            attachOriginToPatched(proto[name], delegate);\n        }\n    }\n    return delegate;\n}\n// TODO: @JiaLiPassion, support cancel task later if necessary\nfunction patchMacroTask(obj, funcName, metaCreator) {\n    let setNative = null;\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[data.cbIdx] = function () {\n            task.invoke.apply(this, arguments);\n        };\n        setNative.apply(data.target, data.args);\n        return task;\n    }\n    setNative = patchMethod(obj, funcName, (delegate) => function (self, args) {\n        const meta = metaCreator(self, args);\n        if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\n            return scheduleMacroTaskWithCurrentZone(meta.name, args[meta.cbIdx], meta, scheduleTask);\n        }\n        else {\n            // cause an error by calling it directly.\n            return delegate.apply(self, args);\n        }\n    });\n}\nfunction attachOriginToPatched(patched, original) {\n    patched[zoneSymbol('OriginalDelegate')] = original;\n}\nlet isDetectedIEOrEdge = false;\nlet ieOrEdge = false;\nfunction isIE() {\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1) {\n            return true;\n        }\n    }\n    catch (error) {\n    }\n    return false;\n}\nfunction isIEOrEdge() {\n    if (isDetectedIEOrEdge) {\n        return ieOrEdge;\n    }\n    isDetectedIEOrEdge = true;\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1 || ua.indexOf('Edge/') !== -1) {\n            ieOrEdge = true;\n        }\n    }\n    catch (error) {\n    }\n    return ieOrEdge;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('ZoneAwarePromise', (global, Zone, api) => {\n    const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n    const ObjectDefineProperty = Object.defineProperty;\n    function readableObjectToString(obj) {\n        if (obj && obj.toString === Object.prototype.toString) {\n            const className = obj.constructor && obj.constructor.name;\n            return (className ? className : '') + ': ' + JSON.stringify(obj);\n        }\n        return obj ? obj.toString() : Object.prototype.toString.call(obj);\n    }\n    const __symbol__ = api.symbol;\n    const _uncaughtPromiseErrors = [];\n    const isDisableWrappingUncaughtPromiseRejection = global[__symbol__('DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION')] === true;\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    const creationTrace = '__creationTrace__';\n    api.onUnhandledError = (e) => {\n        if (api.showUncaughtError()) {\n            const rejection = e && e.rejection;\n            if (rejection) {\n                console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n            }\n            else {\n                console.error(e);\n            }\n        }\n    };\n    api.microtaskDrainDone = () => {\n        while (_uncaughtPromiseErrors.length) {\n            const uncaughtPromiseError = _uncaughtPromiseErrors.shift();\n            try {\n                uncaughtPromiseError.zone.runGuarded(() => {\n                    if (uncaughtPromiseError.throwOriginal) {\n                        throw uncaughtPromiseError.rejection;\n                    }\n                    throw uncaughtPromiseError;\n                });\n            }\n            catch (error) {\n                handleUnhandledRejection(error);\n            }\n        }\n    };\n    const UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL = __symbol__('unhandledPromiseRejectionHandler');\n    function handleUnhandledRejection(e) {\n        api.onUnhandledError(e);\n        try {\n            const handler = Zone[UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL];\n            if (typeof handler === 'function') {\n                handler.call(this, e);\n            }\n        }\n        catch (err) {\n        }\n    }\n    function isThenable(value) {\n        return value && value.then;\n    }\n    function forwardResolution(value) {\n        return value;\n    }\n    function forwardRejection(rejection) {\n        return ZoneAwarePromise.reject(rejection);\n    }\n    const symbolState = __symbol__('state');\n    const symbolValue = __symbol__('value');\n    const symbolFinally = __symbol__('finally');\n    const symbolParentPromiseValue = __symbol__('parentPromiseValue');\n    const symbolParentPromiseState = __symbol__('parentPromiseState');\n    const source = 'Promise.then';\n    const UNRESOLVED = null;\n    const RESOLVED = true;\n    const REJECTED = false;\n    const REJECTED_NO_CATCH = 0;\n    function makeResolver(promise, state) {\n        return (v) => {\n            try {\n                resolvePromise(promise, state, v);\n            }\n            catch (err) {\n                resolvePromise(promise, false, err);\n            }\n            // Do not return value or you will break the Promise spec.\n        };\n    }\n    const once = function () {\n        let wasCalled = false;\n        return function wrapper(wrappedFunction) {\n            return function () {\n                if (wasCalled) {\n                    return;\n                }\n                wasCalled = true;\n                wrappedFunction.apply(null, arguments);\n            };\n        };\n    };\n    const TYPE_ERROR = 'Promise resolved with itself';\n    const CURRENT_TASK_TRACE_SYMBOL = __symbol__('currentTaskTrace');\n    // Promise Resolution\n    function resolvePromise(promise, state, value) {\n        const onceWrapper = once();\n        if (promise === value) {\n            throw new TypeError(TYPE_ERROR);\n        }\n        if (promise[symbolState] === UNRESOLVED) {\n            // should only get value.then once based on promise spec.\n            let then = null;\n            try {\n                if (typeof value === 'object' || typeof value === 'function') {\n                    then = value && value.then;\n                }\n            }\n            catch (err) {\n                onceWrapper(() => {\n                    resolvePromise(promise, false, err);\n                })();\n                return promise;\n            }\n            // if (value instanceof ZoneAwarePromise) {\n            if (state !== REJECTED && value instanceof ZoneAwarePromise &&\n                value.hasOwnProperty(symbolState) && value.hasOwnProperty(symbolValue) &&\n                value[symbolState] !== UNRESOLVED) {\n                clearRejectedNoCatch(value);\n                resolvePromise(promise, value[symbolState], value[symbolValue]);\n            }\n            else if (state !== REJECTED && typeof then === 'function') {\n                try {\n                    then.call(value, onceWrapper(makeResolver(promise, state)), onceWrapper(makeResolver(promise, false)));\n                }\n                catch (err) {\n                    onceWrapper(() => {\n                        resolvePromise(promise, false, err);\n                    })();\n                }\n            }\n            else {\n                promise[symbolState] = state;\n                const queue = promise[symbolValue];\n                promise[symbolValue] = value;\n                if (promise[symbolFinally] === symbolFinally) {\n                    // the promise is generated by Promise.prototype.finally\n                    if (state === RESOLVED) {\n                        // the state is resolved, should ignore the value\n                        // and use parent promise value\n                        promise[symbolState] = promise[symbolParentPromiseState];\n                        promise[symbolValue] = promise[symbolParentPromiseValue];\n                    }\n                }\n                // record task information in value when error occurs, so we can\n                // do some additional work such as render longStackTrace\n                if (state === REJECTED && value instanceof Error) {\n                    // check if longStackTraceZone is here\n                    const trace = Zone.currentTask && Zone.currentTask.data &&\n                        Zone.currentTask.data[creationTrace];\n                    if (trace) {\n                        // only keep the long stack trace into error when in longStackTraceZone\n                        ObjectDefineProperty(value, CURRENT_TASK_TRACE_SYMBOL, { configurable: true, enumerable: false, writable: true, value: trace });\n                    }\n                }\n                for (let i = 0; i < queue.length;) {\n                    scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\n                }\n                if (queue.length == 0 && state == REJECTED) {\n                    promise[symbolState] = REJECTED_NO_CATCH;\n                    let uncaughtPromiseError = value;\n                    try {\n                        // Here we throws a new Error to print more readable error log\n                        // and if the value is not an error, zone.js builds an `Error`\n                        // Object here to attach the stack information.\n                        throw new Error('Uncaught (in promise): ' + readableObjectToString(value) +\n                            (value && value.stack ? '\\n' + value.stack : ''));\n                    }\n                    catch (err) {\n                        uncaughtPromiseError = err;\n                    }\n                    if (isDisableWrappingUncaughtPromiseRejection) {\n                        // If disable wrapping uncaught promise reject\n                        // use the value instead of wrapping it.\n                        uncaughtPromiseError.throwOriginal = true;\n                    }\n                    uncaughtPromiseError.rejection = value;\n                    uncaughtPromiseError.promise = promise;\n                    uncaughtPromiseError.zone = Zone.current;\n                    uncaughtPromiseError.task = Zone.currentTask;\n                    _uncaughtPromiseErrors.push(uncaughtPromiseError);\n                    api.scheduleMicroTask(); // to make sure that it is running\n                }\n            }\n        }\n        // Resolving an already resolved promise is a noop.\n        return promise;\n    }\n    const REJECTION_HANDLED_HANDLER = __symbol__('rejectionHandledHandler');\n    function clearRejectedNoCatch(promise) {\n        if (promise[symbolState] === REJECTED_NO_CATCH) {\n            // if the promise is rejected no catch status\n            // and queue.length > 0, means there is a error handler\n            // here to handle the rejected promise, we should trigger\n            // windows.rejectionhandled eventHandler or nodejs rejectionHandled\n            // eventHandler\n            try {\n                const handler = Zone[REJECTION_HANDLED_HANDLER];\n                if (handler && typeof handler === 'function') {\n                    handler.call(this, { rejection: promise[symbolValue], promise: promise });\n                }\n            }\n            catch (err) {\n            }\n            promise[symbolState] = REJECTED;\n            for (let i = 0; i < _uncaughtPromiseErrors.length; i++) {\n                if (promise === _uncaughtPromiseErrors[i].promise) {\n                    _uncaughtPromiseErrors.splice(i, 1);\n                }\n            }\n        }\n    }\n    function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\n        clearRejectedNoCatch(promise);\n        const promiseState = promise[symbolState];\n        const delegate = promiseState ?\n            (typeof onFulfilled === 'function') ? onFulfilled : forwardResolution :\n            (typeof onRejected === 'function') ? onRejected : forwardRejection;\n        zone.scheduleMicroTask(source, () => {\n            try {\n                const parentPromiseValue = promise[symbolValue];\n                const isFinallyPromise = !!chainPromise && symbolFinally === chainPromise[symbolFinally];\n                if (isFinallyPromise) {\n                    // if the promise is generated from finally call, keep parent promise's state and value\n                    chainPromise[symbolParentPromiseValue] = parentPromiseValue;\n                    chainPromise[symbolParentPromiseState] = promiseState;\n                }\n                // should not pass value to finally callback\n                const value = zone.run(delegate, undefined, isFinallyPromise && delegate !== forwardRejection && delegate !== forwardResolution ?\n                    [] :\n                    [parentPromiseValue]);\n                resolvePromise(chainPromise, true, value);\n            }\n            catch (error) {\n                // if error occurs, should always return this error\n                resolvePromise(chainPromise, false, error);\n            }\n        }, chainPromise);\n    }\n    const ZONE_AWARE_PROMISE_TO_STRING = 'function ZoneAwarePromise() { [native code] }';\n    const noop = function () { };\n    class ZoneAwarePromise {\n        static toString() {\n            return ZONE_AWARE_PROMISE_TO_STRING;\n        }\n        static resolve(value) {\n            return resolvePromise(new this(null), RESOLVED, value);\n        }\n        static reject(error) {\n            return resolvePromise(new this(null), REJECTED, error);\n        }\n        static race(values) {\n            let resolve;\n            let reject;\n            let promise = new this((res, rej) => {\n                resolve = res;\n                reject = rej;\n            });\n            function onResolve(value) {\n                resolve(value);\n            }\n            function onReject(error) {\n                reject(error);\n            }\n            for (let value of values) {\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                value.then(onResolve, onReject);\n            }\n            return promise;\n        }\n        static all(values) {\n            return ZoneAwarePromise.allWithCallback(values);\n        }\n        static allSettled(values) {\n            const P = this && this.prototype instanceof ZoneAwarePromise ? this : ZoneAwarePromise;\n            return P.allWithCallback(values, {\n                thenCallback: (value) => ({ status: 'fulfilled', value }),\n                errorCallback: (err) => ({ status: 'rejected', reason: err })\n            });\n        }\n        static allWithCallback(values, callback) {\n            let resolve;\n            let reject;\n            let promise = new this((res, rej) => {\n                resolve = res;\n                reject = rej;\n            });\n            // Start at 2 to prevent prematurely resolving if .then is called immediately.\n            let unresolvedCount = 2;\n            let valueIndex = 0;\n            const resolvedValues = [];\n            for (let value of values) {\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                const curValueIndex = valueIndex;\n                try {\n                    value.then((value) => {\n                        resolvedValues[curValueIndex] = callback ? callback.thenCallback(value) : value;\n                        unresolvedCount--;\n                        if (unresolvedCount === 0) {\n                            resolve(resolvedValues);\n                        }\n                    }, (err) => {\n                        if (!callback) {\n                            reject(err);\n                        }\n                        else {\n                            resolvedValues[curValueIndex] = callback.errorCallback(err);\n                            unresolvedCount--;\n                            if (unresolvedCount === 0) {\n                                resolve(resolvedValues);\n                            }\n                        }\n                    });\n                }\n                catch (thenErr) {\n                    reject(thenErr);\n                }\n                unresolvedCount++;\n                valueIndex++;\n            }\n            // Make the unresolvedCount zero-based again.\n            unresolvedCount -= 2;\n            if (unresolvedCount === 0) {\n                resolve(resolvedValues);\n            }\n            return promise;\n        }\n        constructor(executor) {\n            const promise = this;\n            if (!(promise instanceof ZoneAwarePromise)) {\n                throw new Error('Must be an instanceof Promise.');\n            }\n            promise[symbolState] = UNRESOLVED;\n            promise[symbolValue] = []; // queue;\n            try {\n                executor && executor(makeResolver(promise, RESOLVED), makeResolver(promise, REJECTED));\n            }\n            catch (error) {\n                resolvePromise(promise, false, error);\n            }\n        }\n        get [Symbol.toStringTag]() {\n            return 'Promise';\n        }\n        get [Symbol.species]() {\n            return ZoneAwarePromise;\n        }\n        then(onFulfilled, onRejected) {\n            let C = this.constructor[Symbol.species];\n            if (!C || typeof C !== 'function') {\n                C = this.constructor || ZoneAwarePromise;\n            }\n            const chainPromise = new C(noop);\n            const zone = Zone.current;\n            if (this[symbolState] == UNRESOLVED) {\n                this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\n            }\n            else {\n                scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\n            }\n            return chainPromise;\n        }\n        catch(onRejected) {\n            return this.then(null, onRejected);\n        }\n        finally(onFinally) {\n            let C = this.constructor[Symbol.species];\n            if (!C || typeof C !== 'function') {\n                C = ZoneAwarePromise;\n            }\n            const chainPromise = new C(noop);\n            chainPromise[symbolFinally] = symbolFinally;\n            const zone = Zone.current;\n            if (this[symbolState] == UNRESOLVED) {\n                this[symbolValue].push(zone, chainPromise, onFinally, onFinally);\n            }\n            else {\n                scheduleResolveOrReject(this, zone, chainPromise, onFinally, onFinally);\n            }\n            return chainPromise;\n        }\n    }\n    // Protect against aggressive optimizers dropping seemingly unused properties.\n    // E.g. Closure Compiler in advanced mode.\n    ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\n    ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\n    ZoneAwarePromise['race'] = ZoneAwarePromise.race;\n    ZoneAwarePromise['all'] = ZoneAwarePromise.all;\n    const NativePromise = global[symbolPromise] = global['Promise'];\n    global['Promise'] = ZoneAwarePromise;\n    const symbolThenPatched = __symbol__('thenPatched');\n    function patchThen(Ctor) {\n        const proto = Ctor.prototype;\n        const prop = ObjectGetOwnPropertyDescriptor(proto, 'then');\n        if (prop && (prop.writable === false || !prop.configurable)) {\n            // check Ctor.prototype.then propertyDescriptor is writable or not\n            // in meteor env, writable is false, we should ignore such case\n            return;\n        }\n        const originalThen = proto.then;\n        // Keep a reference to the original method.\n        proto[symbolThen] = originalThen;\n        Ctor.prototype.then = function (onResolve, onReject) {\n            const wrapped = new ZoneAwarePromise((resolve, reject) => {\n                originalThen.call(this, resolve, reject);\n            });\n            return wrapped.then(onResolve, onReject);\n        };\n        Ctor[symbolThenPatched] = true;\n    }\n    api.patchThen = patchThen;\n    function zoneify(fn) {\n        return function (self, args) {\n            let resultPromise = fn.apply(self, args);\n            if (resultPromise instanceof ZoneAwarePromise) {\n                return resultPromise;\n            }\n            let ctor = resultPromise.constructor;\n            if (!ctor[symbolThenPatched]) {\n                patchThen(ctor);\n            }\n            return resultPromise;\n        };\n    }\n    if (NativePromise) {\n        patchThen(NativePromise);\n        patchMethod(global, 'fetch', delegate => zoneify(delegate));\n    }\n    // This is not part of public API, but it is useful for tests, so we expose it.\n    Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\n    return ZoneAwarePromise;\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// override Function.prototype.toString to make zone.js patched function\n// look like native function\nZone.__load_patch('toString', (global) => {\n    // patch Func.prototype.toString to let them look like native\n    const originalFunctionToString = Function.prototype.toString;\n    const ORIGINAL_DELEGATE_SYMBOL = zoneSymbol('OriginalDelegate');\n    const PROMISE_SYMBOL = zoneSymbol('Promise');\n    const ERROR_SYMBOL = zoneSymbol('Error');\n    const newFunctionToString = function toString() {\n        if (typeof this === 'function') {\n            const originalDelegate = this[ORIGINAL_DELEGATE_SYMBOL];\n            if (originalDelegate) {\n                if (typeof originalDelegate === 'function') {\n                    return originalFunctionToString.call(originalDelegate);\n                }\n                else {\n                    return Object.prototype.toString.call(originalDelegate);\n                }\n            }\n            if (this === Promise) {\n                const nativePromise = global[PROMISE_SYMBOL];\n                if (nativePromise) {\n                    return originalFunctionToString.call(nativePromise);\n                }\n            }\n            if (this === Error) {\n                const nativeError = global[ERROR_SYMBOL];\n                if (nativeError) {\n                    return originalFunctionToString.call(nativeError);\n                }\n            }\n        }\n        return originalFunctionToString.call(this);\n    };\n    newFunctionToString[ORIGINAL_DELEGATE_SYMBOL] = originalFunctionToString;\n    Function.prototype.toString = newFunctionToString;\n    // patch Object.prototype.toString to let them look like native\n    const originalObjectToString = Object.prototype.toString;\n    const PROMISE_OBJECT_TO_STRING = '[object Promise]';\n    Object.prototype.toString = function () {\n        if (typeof Promise === 'function' && this instanceof Promise) {\n            return PROMISE_OBJECT_TO_STRING;\n        }\n        return originalObjectToString.call(this);\n    };\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet passiveSupported = false;\nif (typeof window !== 'undefined') {\n    try {\n        const options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passiveSupported = true;\n            }\n        });\n        window.addEventListener('test', options, options);\n        window.removeEventListener('test', options, options);\n    }\n    catch (err) {\n        passiveSupported = false;\n    }\n}\n// an identifier to tell ZoneTask do not create a new invoke closure\nconst OPTIMIZED_ZONE_EVENT_TASK_DATA = {\n    useG: true\n};\nconst zoneSymbolEventNames$1 = {};\nconst globalSources = {};\nconst EVENT_NAME_SYMBOL_REGX = new RegExp('^' + ZONE_SYMBOL_PREFIX + '(\\\\w+)(true|false)$');\nconst IMMEDIATE_PROPAGATION_SYMBOL = zoneSymbol('propagationStopped');\nfunction prepareEventNames(eventName, eventNameToString) {\n    const falseEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + FALSE_STR;\n    const trueEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + TRUE_STR;\n    const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n    const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n    zoneSymbolEventNames$1[eventName] = {};\n    zoneSymbolEventNames$1[eventName][FALSE_STR] = symbol;\n    zoneSymbolEventNames$1[eventName][TRUE_STR] = symbolCapture;\n}\nfunction patchEventTarget(_global, apis, patchOptions) {\n    const ADD_EVENT_LISTENER = (patchOptions && patchOptions.add) || ADD_EVENT_LISTENER_STR;\n    const REMOVE_EVENT_LISTENER = (patchOptions && patchOptions.rm) || REMOVE_EVENT_LISTENER_STR;\n    const LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.listeners) || 'eventListeners';\n    const REMOVE_ALL_LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.rmAll) || 'removeAllListeners';\n    const zoneSymbolAddEventListener = zoneSymbol(ADD_EVENT_LISTENER);\n    const ADD_EVENT_LISTENER_SOURCE = '.' + ADD_EVENT_LISTENER + ':';\n    const PREPEND_EVENT_LISTENER = 'prependListener';\n    const PREPEND_EVENT_LISTENER_SOURCE = '.' + PREPEND_EVENT_LISTENER + ':';\n    const invokeTask = function (task, target, event) {\n        // for better performance, check isRemoved which is set\n        // by removeEventListener\n        if (task.isRemoved) {\n            return;\n        }\n        const delegate = task.callback;\n        if (typeof delegate === 'object' && delegate.handleEvent) {\n            // create the bind version of handleEvent when invoke\n            task.callback = (event) => delegate.handleEvent(event);\n            task.originalDelegate = delegate;\n        }\n        // invoke static task.invoke\n        task.invoke(task, target, [event]);\n        const options = task.options;\n        if (options && typeof options === 'object' && options.once) {\n            // if options.once is true, after invoke once remove listener here\n            // only browser need to do this, nodejs eventEmitter will cal removeListener\n            // inside EventEmitter.once\n            const delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n            target[REMOVE_EVENT_LISTENER].call(target, event.type, delegate, options);\n        }\n    };\n    // global shared zoneAwareCallback to handle all event callback with capture = false\n    const globalZoneAwareCallback = function (event) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        // event.target is needed for Samsung TV and SourceBuffer\n        // || global is needed https://github.com/angular/zone.js/issues/190\n        const target = this || event.target || _global;\n        const tasks = target[zoneSymbolEventNames$1[event.type][FALSE_STR]];\n        if (tasks) {\n            // invoke all tasks which attached to current target with given event.type and capture = false\n            // for performance concern, if task.length === 1, just invoke\n            if (tasks.length === 1) {\n                invokeTask(tasks[0], target, event);\n            }\n            else {\n                // https://github.com/angular/zone.js/issues/836\n                // copy the tasks array before invoke, to avoid\n                // the callback will remove itself or other listener\n                const copyTasks = tasks.slice();\n                for (let i = 0; i < copyTasks.length; i++) {\n                    if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                        break;\n                    }\n                    invokeTask(copyTasks[i], target, event);\n                }\n            }\n        }\n    };\n    // global shared zoneAwareCallback to handle all event callback with capture = true\n    const globalZoneAwareCaptureCallback = function (event) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        // event.target is needed for Samsung TV and SourceBuffer\n        // || global is needed https://github.com/angular/zone.js/issues/190\n        const target = this || event.target || _global;\n        const tasks = target[zoneSymbolEventNames$1[event.type][TRUE_STR]];\n        if (tasks) {\n            // invoke all tasks which attached to current target with given event.type and capture = false\n            // for performance concern, if task.length === 1, just invoke\n            if (tasks.length === 1) {\n                invokeTask(tasks[0], target, event);\n            }\n            else {\n                // https://github.com/angular/zone.js/issues/836\n                // copy the tasks array before invoke, to avoid\n                // the callback will remove itself or other listener\n                const copyTasks = tasks.slice();\n                for (let i = 0; i < copyTasks.length; i++) {\n                    if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                        break;\n                    }\n                    invokeTask(copyTasks[i], target, event);\n                }\n            }\n        }\n    };\n    function patchEventTargetMethods(obj, patchOptions) {\n        if (!obj) {\n            return false;\n        }\n        let useGlobalCallback = true;\n        if (patchOptions && patchOptions.useG !== undefined) {\n            useGlobalCallback = patchOptions.useG;\n        }\n        const validateHandler = patchOptions && patchOptions.vh;\n        let checkDuplicate = true;\n        if (patchOptions && patchOptions.chkDup !== undefined) {\n            checkDuplicate = patchOptions.chkDup;\n        }\n        let returnTarget = false;\n        if (patchOptions && patchOptions.rt !== undefined) {\n            returnTarget = patchOptions.rt;\n        }\n        let proto = obj;\n        while (proto && !proto.hasOwnProperty(ADD_EVENT_LISTENER)) {\n            proto = ObjectGetPrototypeOf(proto);\n        }\n        if (!proto && obj[ADD_EVENT_LISTENER]) {\n            // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n            proto = obj;\n        }\n        if (!proto) {\n            return false;\n        }\n        if (proto[zoneSymbolAddEventListener]) {\n            return false;\n        }\n        const eventNameToString = patchOptions && patchOptions.eventNameToString;\n        // a shared global taskData to pass data for scheduleEventTask\n        // so we do not need to create a new object just for pass some data\n        const taskData = {};\n        const nativeAddEventListener = proto[zoneSymbolAddEventListener] = proto[ADD_EVENT_LISTENER];\n        const nativeRemoveEventListener = proto[zoneSymbol(REMOVE_EVENT_LISTENER)] =\n            proto[REMOVE_EVENT_LISTENER];\n        const nativeListeners = proto[zoneSymbol(LISTENERS_EVENT_LISTENER)] =\n            proto[LISTENERS_EVENT_LISTENER];\n        const nativeRemoveAllListeners = proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)] =\n            proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER];\n        let nativePrependEventListener;\n        if (patchOptions && patchOptions.prepend) {\n            nativePrependEventListener = proto[zoneSymbol(patchOptions.prepend)] =\n                proto[patchOptions.prepend];\n        }\n        /**\n         * This util function will build an option object with passive option\n         * to handle all possible input from the user.\n         */\n        function buildEventListenerOptions(options, passive) {\n            if (!passiveSupported && typeof options === 'object' && options) {\n                // doesn't support passive but user want to pass an object as options.\n                // this will not work on some old browser, so we just pass a boolean\n                // as useCapture parameter\n                return !!options.capture;\n            }\n            if (!passiveSupported || !passive) {\n                return options;\n            }\n            if (typeof options === 'boolean') {\n                return { capture: options, passive: true };\n            }\n            if (!options) {\n                return { passive: true };\n            }\n            if (typeof options === 'object' && options.passive !== false) {\n                return Object.assign(Object.assign({}, options), { passive: true });\n            }\n            return options;\n        }\n        const customScheduleGlobal = function (task) {\n            // if there is already a task for the eventName + capture,\n            // just return, because we use the shared globalZoneAwareCallback here.\n            if (taskData.isExisting) {\n                return;\n            }\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, taskData.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, taskData.options);\n        };\n        const customCancelGlobal = function (task) {\n            // if task is not marked as isRemoved, this call is directly\n            // from Zone.prototype.cancelTask, we should remove the task\n            // from tasksList of target first\n            if (!task.isRemoved) {\n                const symbolEventNames = zoneSymbolEventNames$1[task.eventName];\n                let symbolEventName;\n                if (symbolEventNames) {\n                    symbolEventName = symbolEventNames[task.capture ? TRUE_STR : FALSE_STR];\n                }\n                const existingTasks = symbolEventName && task.target[symbolEventName];\n                if (existingTasks) {\n                    for (let i = 0; i < existingTasks.length; i++) {\n                        const existingTask = existingTasks[i];\n                        if (existingTask === task) {\n                            existingTasks.splice(i, 1);\n                            // set isRemoved to data for faster invokeTask check\n                            task.isRemoved = true;\n                            if (existingTasks.length === 0) {\n                                // all tasks for the eventName + capture have gone,\n                                // remove globalZoneAwareCallback and remove the task cache from target\n                                task.allRemoved = true;\n                                task.target[symbolEventName] = null;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n            // if all tasks for the eventName + capture have gone,\n            // we will really remove the global event callback,\n            // if not, return\n            if (!task.allRemoved) {\n                return;\n            }\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, task.options);\n        };\n        const customScheduleNonGlobal = function (task) {\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customSchedulePrepend = function (task) {\n            return nativePrependEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customCancelNonGlobal = function (task) {\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.invoke, task.options);\n        };\n        const customSchedule = useGlobalCallback ? customScheduleGlobal : customScheduleNonGlobal;\n        const customCancel = useGlobalCallback ? customCancelGlobal : customCancelNonGlobal;\n        const compareTaskCallbackVsDelegate = function (task, delegate) {\n            const typeOfDelegate = typeof delegate;\n            return (typeOfDelegate === 'function' && task.callback === delegate) ||\n                (typeOfDelegate === 'object' && task.originalDelegate === delegate);\n        };\n        const compare = (patchOptions && patchOptions.diff) ? patchOptions.diff : compareTaskCallbackVsDelegate;\n        const unpatchedEvents = Zone[zoneSymbol('UNPATCHED_EVENTS')];\n        const passiveEvents = _global[zoneSymbol('PASSIVE_EVENTS')];\n        const makeAddListener = function (nativeListener, addSource, customScheduleFn, customCancelFn, returnTarget = false, prepend = false) {\n            return function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                let delegate = arguments[1];\n                if (!delegate) {\n                    return nativeListener.apply(this, arguments);\n                }\n                if (isNode && eventName === 'uncaughtException') {\n                    // don't patch uncaughtException of nodejs to prevent endless loop\n                    return nativeListener.apply(this, arguments);\n                }\n                // don't create the bind delegate function for handleEvent\n                // case here to improve addEventListener performance\n                // we will create the bind delegate when invoke\n                let isHandleEvent = false;\n                if (typeof delegate !== 'function') {\n                    if (!delegate.handleEvent) {\n                        return nativeListener.apply(this, arguments);\n                    }\n                    isHandleEvent = true;\n                }\n                if (validateHandler && !validateHandler(nativeListener, delegate, target, arguments)) {\n                    return;\n                }\n                const passive = passiveSupported && !!passiveEvents && passiveEvents.indexOf(eventName) !== -1;\n                const options = buildEventListenerOptions(arguments[2], passive);\n                if (unpatchedEvents) {\n                    // check upatched list\n                    for (let i = 0; i < unpatchedEvents.length; i++) {\n                        if (eventName === unpatchedEvents[i]) {\n                            if (passive) {\n                                return nativeListener.call(target, eventName, delegate, options);\n                            }\n                            else {\n                                return nativeListener.apply(this, arguments);\n                            }\n                        }\n                    }\n                }\n                const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n                const once = options && typeof options === 'object' ? options.once : false;\n                const zone = Zone.current;\n                let symbolEventNames = zoneSymbolEventNames$1[eventName];\n                if (!symbolEventNames) {\n                    prepareEventNames(eventName, eventNameToString);\n                    symbolEventNames = zoneSymbolEventNames$1[eventName];\n                }\n                const symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                let existingTasks = target[symbolEventName];\n                let isExisting = false;\n                if (existingTasks) {\n                    // already have task registered\n                    isExisting = true;\n                    if (checkDuplicate) {\n                        for (let i = 0; i < existingTasks.length; i++) {\n                            if (compare(existingTasks[i], delegate)) {\n                                // same callback, same capture, same event name, just return\n                                return;\n                            }\n                        }\n                    }\n                }\n                else {\n                    existingTasks = target[symbolEventName] = [];\n                }\n                let source;\n                const constructorName = target.constructor['name'];\n                const targetSource = globalSources[constructorName];\n                if (targetSource) {\n                    source = targetSource[eventName];\n                }\n                if (!source) {\n                    source = constructorName + addSource +\n                        (eventNameToString ? eventNameToString(eventName) : eventName);\n                }\n                // do not create a new object as task.data to pass those things\n                // just use the global shared one\n                taskData.options = options;\n                if (once) {\n                    // if addEventListener with once options, we don't pass it to\n                    // native addEventListener, instead we keep the once setting\n                    // and handle ourselves.\n                    taskData.options.once = false;\n                }\n                taskData.target = target;\n                taskData.capture = capture;\n                taskData.eventName = eventName;\n                taskData.isExisting = isExisting;\n                const data = useGlobalCallback ? OPTIMIZED_ZONE_EVENT_TASK_DATA : undefined;\n                // keep taskData into data to allow onScheduleEventTask to access the task information\n                if (data) {\n                    data.taskData = taskData;\n                }\n                const task = zone.scheduleEventTask(source, delegate, data, customScheduleFn, customCancelFn);\n                // should clear taskData.target to avoid memory leak\n                // issue, https://github.com/angular/angular/issues/20442\n                taskData.target = null;\n                // need to clear up taskData because it is a global object\n                if (data) {\n                    data.taskData = null;\n                }\n                // have to save those information to task in case\n                // application may call task.zone.cancelTask() directly\n                if (once) {\n                    options.once = true;\n                }\n                if (!(!passiveSupported && typeof task.options === 'boolean')) {\n                    // if not support passive, and we pass an option object\n                    // to addEventListener, we should save the options to task\n                    task.options = options;\n                }\n                task.target = target;\n                task.capture = capture;\n                task.eventName = eventName;\n                if (isHandleEvent) {\n                    // save original delegate for compare to check duplicate\n                    task.originalDelegate = delegate;\n                }\n                if (!prepend) {\n                    existingTasks.push(task);\n                }\n                else {\n                    existingTasks.unshift(task);\n                }\n                if (returnTarget) {\n                    return target;\n                }\n            };\n        };\n        proto[ADD_EVENT_LISTENER] = makeAddListener(nativeAddEventListener, ADD_EVENT_LISTENER_SOURCE, customSchedule, customCancel, returnTarget);\n        if (nativePrependEventListener) {\n            proto[PREPEND_EVENT_LISTENER] = makeAddListener(nativePrependEventListener, PREPEND_EVENT_LISTENER_SOURCE, customSchedulePrepend, customCancel, returnTarget, true);\n        }\n        proto[REMOVE_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const options = arguments[2];\n            const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n            const delegate = arguments[1];\n            if (!delegate) {\n                return nativeRemoveEventListener.apply(this, arguments);\n            }\n            if (validateHandler &&\n                !validateHandler(nativeRemoveEventListener, delegate, target, arguments)) {\n                return;\n            }\n            const symbolEventNames = zoneSymbolEventNames$1[eventName];\n            let symbolEventName;\n            if (symbolEventNames) {\n                symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n            }\n            const existingTasks = symbolEventName && target[symbolEventName];\n            if (existingTasks) {\n                for (let i = 0; i < existingTasks.length; i++) {\n                    const existingTask = existingTasks[i];\n                    if (compare(existingTask, delegate)) {\n                        existingTasks.splice(i, 1);\n                        // set isRemoved to data for faster invokeTask check\n                        existingTask.isRemoved = true;\n                        if (existingTasks.length === 0) {\n                            // all tasks for the eventName + capture have gone,\n                            // remove globalZoneAwareCallback and remove the task cache from target\n                            existingTask.allRemoved = true;\n                            target[symbolEventName] = null;\n                            // in the target, we have an event listener which is added by on_property\n                            // such as target.onclick = function() {}, so we need to clear this internal\n                            // property too if all delegates all removed\n                            if (typeof eventName === 'string') {\n                                const onPropertySymbol = ZONE_SYMBOL_PREFIX + 'ON_PROPERTY' + eventName;\n                                target[onPropertySymbol] = null;\n                            }\n                        }\n                        existingTask.zone.cancelTask(existingTask);\n                        if (returnTarget) {\n                            return target;\n                        }\n                        return;\n                    }\n                }\n            }\n            // issue 930, didn't find the event name or callback\n            // from zone kept existingTasks, the callback maybe\n            // added outside of zone, we need to call native removeEventListener\n            // to try to remove it.\n            return nativeRemoveEventListener.apply(this, arguments);\n        };\n        proto[LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const listeners = [];\n            const tasks = findEventTasks(target, eventNameToString ? eventNameToString(eventName) : eventName);\n            for (let i = 0; i < tasks.length; i++) {\n                const task = tasks[i];\n                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                listeners.push(delegate);\n            }\n            return listeners;\n        };\n        proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (!eventName) {\n                const keys = Object.keys(target);\n                for (let i = 0; i < keys.length; i++) {\n                    const prop = keys[i];\n                    const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                    let evtName = match && match[1];\n                    // in nodejs EventEmitter, removeListener event is\n                    // used for monitoring the removeListener call,\n                    // so just keep removeListener eventListener until\n                    // all other eventListeners are removed\n                    if (evtName && evtName !== 'removeListener') {\n                        this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, evtName);\n                    }\n                }\n                // remove removeListener listener finally\n                this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, 'removeListener');\n            }\n            else {\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const symbolEventNames = zoneSymbolEventNames$1[eventName];\n                if (symbolEventNames) {\n                    const symbolEventName = symbolEventNames[FALSE_STR];\n                    const symbolCaptureEventName = symbolEventNames[TRUE_STR];\n                    const tasks = target[symbolEventName];\n                    const captureTasks = target[symbolCaptureEventName];\n                    if (tasks) {\n                        const removeTasks = tasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                    if (captureTasks) {\n                        const removeTasks = captureTasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                }\n            }\n            if (returnTarget) {\n                return this;\n            }\n        };\n        // for native toString patch\n        attachOriginToPatched(proto[ADD_EVENT_LISTENER], nativeAddEventListener);\n        attachOriginToPatched(proto[REMOVE_EVENT_LISTENER], nativeRemoveEventListener);\n        if (nativeRemoveAllListeners) {\n            attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER], nativeRemoveAllListeners);\n        }\n        if (nativeListeners) {\n            attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER], nativeListeners);\n        }\n        return true;\n    }\n    let results = [];\n    for (let i = 0; i < apis.length; i++) {\n        results[i] = patchEventTargetMethods(apis[i], patchOptions);\n    }\n    return results;\n}\nfunction findEventTasks(target, eventName) {\n    if (!eventName) {\n        const foundTasks = [];\n        for (let prop in target) {\n            const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n            let evtName = match && match[1];\n            if (evtName && (!eventName || evtName === eventName)) {\n                const tasks = target[prop];\n                if (tasks) {\n                    for (let i = 0; i < tasks.length; i++) {\n                        foundTasks.push(tasks[i]);\n                    }\n                }\n            }\n        }\n        return foundTasks;\n    }\n    let symbolEventName = zoneSymbolEventNames$1[eventName];\n    if (!symbolEventName) {\n        prepareEventNames(eventName);\n        symbolEventName = zoneSymbolEventNames$1[eventName];\n    }\n    const captureFalseTasks = target[symbolEventName[FALSE_STR]];\n    const captureTrueTasks = target[symbolEventName[TRUE_STR]];\n    if (!captureFalseTasks) {\n        return captureTrueTasks ? captureTrueTasks.slice() : [];\n    }\n    else {\n        return captureTrueTasks ? captureFalseTasks.concat(captureTrueTasks) :\n            captureFalseTasks.slice();\n    }\n}\nfunction patchEventPrototype(global, api) {\n    const Event = global['Event'];\n    if (Event && Event.prototype) {\n        api.patchMethod(Event.prototype, 'stopImmediatePropagation', (delegate) => function (self, args) {\n            self[IMMEDIATE_PROPAGATION_SYMBOL] = true;\n            // we need to call the native stopImmediatePropagation\n            // in case in some hybrid application, some part of\n            // application will be controlled by zone, some are not\n            delegate && delegate.apply(self, args);\n        });\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction patchCallbacks(api, target, targetName, method, callbacks) {\n    const symbol = Zone.__symbol__(method);\n    if (target[symbol]) {\n        return;\n    }\n    const nativeDelegate = target[symbol] = target[method];\n    target[method] = function (name, opts, options) {\n        if (opts && opts.prototype) {\n            callbacks.forEach(function (callback) {\n                const source = `${targetName}.${method}::` + callback;\n                const prototype = opts.prototype;\n                if (prototype.hasOwnProperty(callback)) {\n                    const descriptor = api.ObjectGetOwnPropertyDescriptor(prototype, callback);\n                    if (descriptor && descriptor.value) {\n                        descriptor.value = api.wrapWithCurrentZone(descriptor.value, source);\n                        api._redefineProperty(opts.prototype, callback, descriptor);\n                    }\n                    else if (prototype[callback]) {\n                        prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                    }\n                }\n                else if (prototype[callback]) {\n                    prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                }\n            });\n        }\n        return nativeDelegate.call(target, name, opts, options);\n    };\n    api.attachOriginToPatched(target[method], nativeDelegate);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst globalEventHandlersEventNames = [\n    'abort',\n    'animationcancel',\n    'animationend',\n    'animationiteration',\n    'auxclick',\n    'beforeinput',\n    'blur',\n    'cancel',\n    'canplay',\n    'canplaythrough',\n    'change',\n    'compositionstart',\n    'compositionupdate',\n    'compositionend',\n    'cuechange',\n    'click',\n    'close',\n    'contextmenu',\n    'curechange',\n    'dblclick',\n    'drag',\n    'dragend',\n    'dragenter',\n    'dragexit',\n    'dragleave',\n    'dragover',\n    'drop',\n    'durationchange',\n    'emptied',\n    'ended',\n    'error',\n    'focus',\n    'focusin',\n    'focusout',\n    'gotpointercapture',\n    'input',\n    'invalid',\n    'keydown',\n    'keypress',\n    'keyup',\n    'load',\n    'loadstart',\n    'loadeddata',\n    'loadedmetadata',\n    'lostpointercapture',\n    'mousedown',\n    'mouseenter',\n    'mouseleave',\n    'mousemove',\n    'mouseout',\n    'mouseover',\n    'mouseup',\n    'mousewheel',\n    'orientationchange',\n    'pause',\n    'play',\n    'playing',\n    'pointercancel',\n    'pointerdown',\n    'pointerenter',\n    'pointerleave',\n    'pointerlockchange',\n    'mozpointerlockchange',\n    'webkitpointerlockerchange',\n    'pointerlockerror',\n    'mozpointerlockerror',\n    'webkitpointerlockerror',\n    'pointermove',\n    'pointout',\n    'pointerover',\n    'pointerup',\n    'progress',\n    'ratechange',\n    'reset',\n    'resize',\n    'scroll',\n    'seeked',\n    'seeking',\n    'select',\n    'selectionchange',\n    'selectstart',\n    'show',\n    'sort',\n    'stalled',\n    'submit',\n    'suspend',\n    'timeupdate',\n    'volumechange',\n    'touchcancel',\n    'touchmove',\n    'touchstart',\n    'touchend',\n    'transitioncancel',\n    'transitionend',\n    'waiting',\n    'wheel'\n];\nconst documentEventNames = [\n    'afterscriptexecute', 'beforescriptexecute', 'DOMContentLoaded', 'freeze', 'fullscreenchange',\n    'mozfullscreenchange', 'webkitfullscreenchange', 'msfullscreenchange', 'fullscreenerror',\n    'mozfullscreenerror', 'webkitfullscreenerror', 'msfullscreenerror', 'readystatechange',\n    'visibilitychange', 'resume'\n];\nconst windowEventNames = [\n    'absolutedeviceorientation',\n    'afterinput',\n    'afterprint',\n    'appinstalled',\n    'beforeinstallprompt',\n    'beforeprint',\n    'beforeunload',\n    'devicelight',\n    'devicemotion',\n    'deviceorientation',\n    'deviceorientationabsolute',\n    'deviceproximity',\n    'hashchange',\n    'languagechange',\n    'message',\n    'mozbeforepaint',\n    'offline',\n    'online',\n    'paint',\n    'pageshow',\n    'pagehide',\n    'popstate',\n    'rejectionhandled',\n    'storage',\n    'unhandledrejection',\n    'unload',\n    'userproximity',\n    'vrdisplayconnected',\n    'vrdisplaydisconnected',\n    'vrdisplaypresentchange'\n];\nconst htmlElementEventNames = [\n    'beforecopy', 'beforecut', 'beforepaste', 'copy', 'cut', 'paste', 'dragstart', 'loadend',\n    'animationstart', 'search', 'transitionrun', 'transitionstart', 'webkitanimationend',\n    'webkitanimationiteration', 'webkitanimationstart', 'webkittransitionend'\n];\nconst mediaElementEventNames = ['encrypted', 'waitingforkey', 'msneedkey', 'mozinterruptbegin', 'mozinterruptend'];\nconst ieElementEventNames = [\n    'activate',\n    'afterupdate',\n    'ariarequest',\n    'beforeactivate',\n    'beforedeactivate',\n    'beforeeditfocus',\n    'beforeupdate',\n    'cellchange',\n    'controlselect',\n    'dataavailable',\n    'datasetchanged',\n    'datasetcomplete',\n    'errorupdate',\n    'filterchange',\n    'layoutcomplete',\n    'losecapture',\n    'move',\n    'moveend',\n    'movestart',\n    'propertychange',\n    'resizeend',\n    'resizestart',\n    'rowenter',\n    'rowexit',\n    'rowsdelete',\n    'rowsinserted',\n    'command',\n    'compassneedscalibration',\n    'deactivate',\n    'help',\n    'mscontentzoom',\n    'msmanipulationstatechanged',\n    'msgesturechange',\n    'msgesturedoubletap',\n    'msgestureend',\n    'msgesturehold',\n    'msgesturestart',\n    'msgesturetap',\n    'msgotpointercapture',\n    'msinertiastart',\n    'mslostpointercapture',\n    'mspointercancel',\n    'mspointerdown',\n    'mspointerenter',\n    'mspointerhover',\n    'mspointerleave',\n    'mspointermove',\n    'mspointerout',\n    'mspointerover',\n    'mspointerup',\n    'pointerout',\n    'mssitemodejumplistitemremoved',\n    'msthumbnailclick',\n    'stop',\n    'storagecommit'\n];\nconst webglEventNames = ['webglcontextrestored', 'webglcontextlost', 'webglcontextcreationerror'];\nconst formEventNames = ['autocomplete', 'autocompleteerror'];\nconst detailEventNames = ['toggle'];\nconst frameEventNames = ['load'];\nconst frameSetEventNames = ['blur', 'error', 'focus', 'load', 'resize', 'scroll', 'messageerror'];\nconst marqueeEventNames = ['bounce', 'finish', 'start'];\nconst XMLHttpRequestEventNames = [\n    'loadstart', 'progress', 'abort', 'error', 'load', 'progress', 'timeout', 'loadend',\n    'readystatechange'\n];\nconst IDBIndexEventNames = ['upgradeneeded', 'complete', 'abort', 'success', 'error', 'blocked', 'versionchange', 'close'];\nconst websocketEventNames = ['close', 'error', 'open', 'message'];\nconst workerEventNames = ['error', 'message'];\nconst eventNames = globalEventHandlersEventNames.concat(webglEventNames, formEventNames, detailEventNames, documentEventNames, windowEventNames, htmlElementEventNames, ieElementEventNames);\nfunction filterProperties(target, onProperties, ignoreProperties) {\n    if (!ignoreProperties || ignoreProperties.length === 0) {\n        return onProperties;\n    }\n    const tip = ignoreProperties.filter(ip => ip.target === target);\n    if (!tip || tip.length === 0) {\n        return onProperties;\n    }\n    const targetIgnoreProperties = tip[0].ignoreProperties;\n    return onProperties.filter(op => targetIgnoreProperties.indexOf(op) === -1);\n}\nfunction patchFilteredProperties(target, onProperties, ignoreProperties, prototype) {\n    // check whether target is available, sometimes target will be undefined\n    // because different browser or some 3rd party plugin.\n    if (!target) {\n        return;\n    }\n    const filteredProperties = filterProperties(target, onProperties, ignoreProperties);\n    patchOnProperties(target, filteredProperties, prototype);\n}\nfunction propertyDescriptorPatch(api, _global) {\n    if (isNode && !isMix) {\n        return;\n    }\n    if (Zone[api.symbol('patchEvents')]) {\n        // events are already been patched by legacy patch.\n        return;\n    }\n    const supportsWebSocket = typeof WebSocket !== 'undefined';\n    const ignoreProperties = _global['__Zone_ignore_on_properties'];\n    // for browsers that we can patch the descriptor:  Chrome & Firefox\n    if (isBrowser) {\n        const internalWindow = window;\n        const ignoreErrorProperties = isIE() ? [{ target: internalWindow, ignoreProperties: ['error'] }] : [];\n        // in IE/Edge, onProp not exist in window object, but in WindowPrototype\n        // so we need to pass WindowPrototype to check onProp exist or not\n        patchFilteredProperties(internalWindow, eventNames.concat(['messageerror']), ignoreProperties ? ignoreProperties.concat(ignoreErrorProperties) : ignoreProperties, ObjectGetPrototypeOf(internalWindow));\n        patchFilteredProperties(Document.prototype, eventNames, ignoreProperties);\n        if (typeof internalWindow['SVGElement'] !== 'undefined') {\n            patchFilteredProperties(internalWindow['SVGElement'].prototype, eventNames, ignoreProperties);\n        }\n        patchFilteredProperties(Element.prototype, eventNames, ignoreProperties);\n        patchFilteredProperties(HTMLElement.prototype, eventNames, ignoreProperties);\n        patchFilteredProperties(HTMLMediaElement.prototype, mediaElementEventNames, ignoreProperties);\n        patchFilteredProperties(HTMLFrameSetElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);\n        patchFilteredProperties(HTMLBodyElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);\n        patchFilteredProperties(HTMLFrameElement.prototype, frameEventNames, ignoreProperties);\n        patchFilteredProperties(HTMLIFrameElement.prototype, frameEventNames, ignoreProperties);\n        const HTMLMarqueeElement = internalWindow['HTMLMarqueeElement'];\n        if (HTMLMarqueeElement) {\n            patchFilteredProperties(HTMLMarqueeElement.prototype, marqueeEventNames, ignoreProperties);\n        }\n        const Worker = internalWindow['Worker'];\n        if (Worker) {\n            patchFilteredProperties(Worker.prototype, workerEventNames, ignoreProperties);\n        }\n    }\n    const XMLHttpRequest = _global['XMLHttpRequest'];\n    if (XMLHttpRequest) {\n        // XMLHttpRequest is not available in ServiceWorker, so we need to check here\n        patchFilteredProperties(XMLHttpRequest.prototype, XMLHttpRequestEventNames, ignoreProperties);\n    }\n    const XMLHttpRequestEventTarget = _global['XMLHttpRequestEventTarget'];\n    if (XMLHttpRequestEventTarget) {\n        patchFilteredProperties(XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype, XMLHttpRequestEventNames, ignoreProperties);\n    }\n    if (typeof IDBIndex !== 'undefined') {\n        patchFilteredProperties(IDBIndex.prototype, IDBIndexEventNames, ignoreProperties);\n        patchFilteredProperties(IDBRequest.prototype, IDBIndexEventNames, ignoreProperties);\n        patchFilteredProperties(IDBOpenDBRequest.prototype, IDBIndexEventNames, ignoreProperties);\n        patchFilteredProperties(IDBDatabase.prototype, IDBIndexEventNames, ignoreProperties);\n        patchFilteredProperties(IDBTransaction.prototype, IDBIndexEventNames, ignoreProperties);\n        patchFilteredProperties(IDBCursor.prototype, IDBIndexEventNames, ignoreProperties);\n    }\n    if (supportsWebSocket) {\n        patchFilteredProperties(WebSocket.prototype, websocketEventNames, ignoreProperties);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('util', (global, Zone, api) => {\n    api.patchOnProperties = patchOnProperties;\n    api.patchMethod = patchMethod;\n    api.bindArguments = bindArguments;\n    api.patchMacroTask = patchMacroTask;\n    // In earlier version of zone.js (<0.9.0), we use env name `__zone_symbol__BLACK_LISTED_EVENTS` to\n    // define which events will not be patched by `Zone.js`.\n    // In newer version (>=0.9.0), we change the env name to `__zone_symbol__UNPATCHED_EVENTS` to keep\n    // the name consistent with angular repo.\n    // The  `__zone_symbol__BLACK_LISTED_EVENTS` is deprecated, but it is still be supported for\n    // backwards compatibility.\n    const SYMBOL_BLACK_LISTED_EVENTS = Zone.__symbol__('BLACK_LISTED_EVENTS');\n    const SYMBOL_UNPATCHED_EVENTS = Zone.__symbol__('UNPATCHED_EVENTS');\n    if (global[SYMBOL_UNPATCHED_EVENTS]) {\n        global[SYMBOL_BLACK_LISTED_EVENTS] = global[SYMBOL_UNPATCHED_EVENTS];\n    }\n    if (global[SYMBOL_BLACK_LISTED_EVENTS]) {\n        Zone[SYMBOL_BLACK_LISTED_EVENTS] = Zone[SYMBOL_UNPATCHED_EVENTS] =\n            global[SYMBOL_BLACK_LISTED_EVENTS];\n    }\n    api.patchEventPrototype = patchEventPrototype;\n    api.patchEventTarget = patchEventTarget;\n    api.isIEOrEdge = isIEOrEdge;\n    api.ObjectDefineProperty = ObjectDefineProperty;\n    api.ObjectGetOwnPropertyDescriptor = ObjectGetOwnPropertyDescriptor;\n    api.ObjectCreate = ObjectCreate;\n    api.ArraySlice = ArraySlice;\n    api.patchClass = patchClass;\n    api.wrapWithCurrentZone = wrapWithCurrentZone;\n    api.filterProperties = filterProperties;\n    api.attachOriginToPatched = attachOriginToPatched;\n    api._redefineProperty = Object.defineProperty;\n    api.patchCallbacks = patchCallbacks;\n    api.getGlobalObjects = () => ({\n        globalSources,\n        zoneSymbolEventNames: zoneSymbolEventNames$1,\n        eventNames,\n        isBrowser,\n        isMix,\n        isNode,\n        TRUE_STR,\n        FALSE_STR,\n        ZONE_SYMBOL_PREFIX,\n        ADD_EVENT_LISTENER_STR,\n        REMOVE_EVENT_LISTENER_STR\n    });\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst taskSymbol = zoneSymbol('zoneTask');\nfunction patchTimer(window, setName, cancelName, nameSuffix) {\n    let setNative = null;\n    let clearNative = null;\n    setName += nameSuffix;\n    cancelName += nameSuffix;\n    const tasksByHandleId = {};\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[0] = function () {\n            return task.invoke.apply(this, arguments);\n        };\n        data.handleId = setNative.apply(window, data.args);\n        return task;\n    }\n    function clearTask(task) {\n        return clearNative.call(window, task.data.handleId);\n    }\n    setNative =\n        patchMethod(window, setName, (delegate) => function (self, args) {\n            if (typeof args[0] === 'function') {\n                const options = {\n                    isPeriodic: nameSuffix === 'Interval',\n                    delay: (nameSuffix === 'Timeout' || nameSuffix === 'Interval') ? args[1] || 0 :\n                        undefined,\n                    args: args\n                };\n                const callback = args[0];\n                args[0] = function timer() {\n                    try {\n                        return callback.apply(this, arguments);\n                    }\n                    finally {\n                        // issue-934, task will be cancelled\n                        // even it is a periodic task such as\n                        // setInterval\n                        // https://github.com/angular/angular/issues/40387\n                        // Cleanup tasksByHandleId should be handled before scheduleTask\n                        // Since some zoneSpec may intercept and doesn't trigger\n                        // scheduleFn(scheduleTask) provided here.\n                        if (!(options.isPeriodic)) {\n                            if (typeof options.handleId === 'number') {\n                                // in non-nodejs env, we remove timerId\n                                // from local cache\n                                delete tasksByHandleId[options.handleId];\n                            }\n                            else if (options.handleId) {\n                                // Node returns complex objects as handleIds\n                                // we remove task reference from timer object\n                                options.handleId[taskSymbol] = null;\n                            }\n                        }\n                    }\n                };\n                const task = scheduleMacroTaskWithCurrentZone(setName, args[0], options, scheduleTask, clearTask);\n                if (!task) {\n                    return task;\n                }\n                // Node.js must additionally support the ref and unref functions.\n                const handle = task.data.handleId;\n                if (typeof handle === 'number') {\n                    // for non nodejs env, we save handleId: task\n                    // mapping in local cache for clearTimeout\n                    tasksByHandleId[handle] = task;\n                }\n                else if (handle) {\n                    // for nodejs env, we save task\n                    // reference in timerId Object for clearTimeout\n                    handle[taskSymbol] = task;\n                }\n                // check whether handle is null, because some polyfill or browser\n                // may return undefined from setTimeout/setInterval/setImmediate/requestAnimationFrame\n                if (handle && handle.ref && handle.unref && typeof handle.ref === 'function' &&\n                    typeof handle.unref === 'function') {\n                    task.ref = handle.ref.bind(handle);\n                    task.unref = handle.unref.bind(handle);\n                }\n                if (typeof handle === 'number' || handle) {\n                    return handle;\n                }\n                return task;\n            }\n            else {\n                // cause an error by calling it directly.\n                return delegate.apply(window, args);\n            }\n        });\n    clearNative =\n        patchMethod(window, cancelName, (delegate) => function (self, args) {\n            const id = args[0];\n            let task;\n            if (typeof id === 'number') {\n                // non nodejs env.\n                task = tasksByHandleId[id];\n            }\n            else {\n                // nodejs env.\n                task = id && id[taskSymbol];\n                // other environments.\n                if (!task) {\n                    task = id;\n                }\n            }\n            if (task && typeof task.type === 'string') {\n                if (task.state !== 'notScheduled' &&\n                    (task.cancelFn && task.data.isPeriodic || task.runCount === 0)) {\n                    if (typeof id === 'number') {\n                        delete tasksByHandleId[id];\n                    }\n                    else if (id) {\n                        id[taskSymbol] = null;\n                    }\n                    // Do not cancel already canceled functions\n                    task.zone.cancelTask(task);\n                }\n            }\n            else {\n                // cause an error by calling it directly.\n                delegate.apply(window, args);\n            }\n        });\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction patchCustomElements(_global, api) {\n    const { isBrowser, isMix } = api.getGlobalObjects();\n    if ((!isBrowser && !isMix) || !_global['customElements'] || !('customElements' in _global)) {\n        return;\n    }\n    const callbacks = ['connectedCallback', 'disconnectedCallback', 'adoptedCallback', 'attributeChangedCallback'];\n    api.patchCallbacks(api, _global.customElements, 'customElements', 'define', callbacks);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction eventTargetPatch(_global, api) {\n    if (Zone[api.symbol('patchEventTarget')]) {\n        // EventTarget is already patched.\n        return;\n    }\n    const { eventNames, zoneSymbolEventNames, TRUE_STR, FALSE_STR, ZONE_SYMBOL_PREFIX } = api.getGlobalObjects();\n    //  predefine all __zone_symbol__ + eventName + true/false string\n    for (let i = 0; i < eventNames.length; i++) {\n        const eventName = eventNames[i];\n        const falseEventName = eventName + FALSE_STR;\n        const trueEventName = eventName + TRUE_STR;\n        const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n        const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n        zoneSymbolEventNames[eventName] = {};\n        zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n        zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n    }\n    const EVENT_TARGET = _global['EventTarget'];\n    if (!EVENT_TARGET || !EVENT_TARGET.prototype) {\n        return;\n    }\n    api.patchEventTarget(_global, [EVENT_TARGET && EVENT_TARGET.prototype]);\n    return true;\n}\nfunction patchEvent(global, api) {\n    api.patchEventPrototype(global, api);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('legacy', (global) => {\n    const legacyPatch = global[Zone.__symbol__('legacyPatch')];\n    if (legacyPatch) {\n        legacyPatch();\n    }\n});\nZone.__load_patch('queueMicrotask', (global, Zone, api) => {\n    api.patchMethod(global, 'queueMicrotask', delegate => {\n        return function (self, args) {\n            Zone.current.scheduleMicroTask('queueMicrotask', args[0]);\n        };\n    });\n});\nZone.__load_patch('timers', (global) => {\n    const set = 'set';\n    const clear = 'clear';\n    patchTimer(global, set, clear, 'Timeout');\n    patchTimer(global, set, clear, 'Interval');\n    patchTimer(global, set, clear, 'Immediate');\n});\nZone.__load_patch('requestAnimationFrame', (global) => {\n    patchTimer(global, 'request', 'cancel', 'AnimationFrame');\n    patchTimer(global, 'mozRequest', 'mozCancel', 'AnimationFrame');\n    patchTimer(global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');\n});\nZone.__load_patch('blocking', (global, Zone) => {\n    const blockingMethods = ['alert', 'prompt', 'confirm'];\n    for (let i = 0; i < blockingMethods.length; i++) {\n        const name = blockingMethods[i];\n        patchMethod(global, name, (delegate, symbol, name) => {\n            return function (s, args) {\n                return Zone.current.run(delegate, global, args, name);\n            };\n        });\n    }\n});\nZone.__load_patch('EventTarget', (global, Zone, api) => {\n    patchEvent(global, api);\n    eventTargetPatch(global, api);\n    // patch XMLHttpRequestEventTarget's addEventListener/removeEventListener\n    const XMLHttpRequestEventTarget = global['XMLHttpRequestEventTarget'];\n    if (XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype) {\n        api.patchEventTarget(global, [XMLHttpRequestEventTarget.prototype]);\n    }\n});\nZone.__load_patch('MutationObserver', (global, Zone, api) => {\n    patchClass('MutationObserver');\n    patchClass('WebKitMutationObserver');\n});\nZone.__load_patch('IntersectionObserver', (global, Zone, api) => {\n    patchClass('IntersectionObserver');\n});\nZone.__load_patch('FileReader', (global, Zone, api) => {\n    patchClass('FileReader');\n});\nZone.__load_patch('on_property', (global, Zone, api) => {\n    propertyDescriptorPatch(api, global);\n});\nZone.__load_patch('customElements', (global, Zone, api) => {\n    patchCustomElements(global, api);\n});\nZone.__load_patch('XHR', (global, Zone) => {\n    // Treat XMLHttpRequest as a macrotask.\n    patchXHR(global);\n    const XHR_TASK = zoneSymbol('xhrTask');\n    const XHR_SYNC = zoneSymbol('xhrSync');\n    const XHR_LISTENER = zoneSymbol('xhrListener');\n    const XHR_SCHEDULED = zoneSymbol('xhrScheduled');\n    const XHR_URL = zoneSymbol('xhrURL');\n    const XHR_ERROR_BEFORE_SCHEDULED = zoneSymbol('xhrErrorBeforeScheduled');\n    function patchXHR(window) {\n        const XMLHttpRequest = window['XMLHttpRequest'];\n        if (!XMLHttpRequest) {\n            // XMLHttpRequest is not available in service worker\n            return;\n        }\n        const XMLHttpRequestPrototype = XMLHttpRequest.prototype;\n        function findPendingTask(target) {\n            return target[XHR_TASK];\n        }\n        let oriAddListener = XMLHttpRequestPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n        let oriRemoveListener = XMLHttpRequestPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n        if (!oriAddListener) {\n            const XMLHttpRequestEventTarget = window['XMLHttpRequestEventTarget'];\n            if (XMLHttpRequestEventTarget) {\n                const XMLHttpRequestEventTargetPrototype = XMLHttpRequestEventTarget.prototype;\n                oriAddListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                oriRemoveListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            }\n        }\n        const READY_STATE_CHANGE = 'readystatechange';\n        const SCHEDULED = 'scheduled';\n        function scheduleTask(task) {\n            const data = task.data;\n            const target = data.target;\n            target[XHR_SCHEDULED] = false;\n            target[XHR_ERROR_BEFORE_SCHEDULED] = false;\n            // remove existing event listener\n            const listener = target[XHR_LISTENER];\n            if (!oriAddListener) {\n                oriAddListener = target[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                oriRemoveListener = target[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            }\n            if (listener) {\n                oriRemoveListener.call(target, READY_STATE_CHANGE, listener);\n            }\n            const newListener = target[XHR_LISTENER] = () => {\n                if (target.readyState === target.DONE) {\n                    // sometimes on some browsers XMLHttpRequest will fire onreadystatechange with\n                    // readyState=4 multiple times, so we need to check task state here\n                    if (!data.aborted && target[XHR_SCHEDULED] && task.state === SCHEDULED) {\n                        // check whether the xhr has registered onload listener\n                        // if that is the case, the task should invoke after all\n                        // onload listeners finish.\n                        // Also if the request failed without response (status = 0), the load event handler\n                        // will not be triggered, in that case, we should also invoke the placeholder callback\n                        // to close the XMLHttpRequest::send macroTask.\n                        // https://github.com/angular/angular/issues/38795\n                        const loadTasks = target[Zone.__symbol__('loadfalse')];\n                        if (target.status !== 0 && loadTasks && loadTasks.length > 0) {\n                            const oriInvoke = task.invoke;\n                            task.invoke = function () {\n                                // need to load the tasks again, because in other\n                                // load listener, they may remove themselves\n                                const loadTasks = target[Zone.__symbol__('loadfalse')];\n                                for (let i = 0; i < loadTasks.length; i++) {\n                                    if (loadTasks[i] === task) {\n                                        loadTasks.splice(i, 1);\n                                    }\n                                }\n                                if (!data.aborted && task.state === SCHEDULED) {\n                                    oriInvoke.call(task);\n                                }\n                            };\n                            loadTasks.push(task);\n                        }\n                        else {\n                            task.invoke();\n                        }\n                    }\n                    else if (!data.aborted && target[XHR_SCHEDULED] === false) {\n                        // error occurs when xhr.send()\n                        target[XHR_ERROR_BEFORE_SCHEDULED] = true;\n                    }\n                }\n            };\n            oriAddListener.call(target, READY_STATE_CHANGE, newListener);\n            const storedTask = target[XHR_TASK];\n            if (!storedTask) {\n                target[XHR_TASK] = task;\n            }\n            sendNative.apply(target, data.args);\n            target[XHR_SCHEDULED] = true;\n            return task;\n        }\n        function placeholderCallback() { }\n        function clearTask(task) {\n            const data = task.data;\n            // Note - ideally, we would call data.target.removeEventListener here, but it's too late\n            // to prevent it from firing. So instead, we store info for the event listener.\n            data.aborted = true;\n            return abortNative.apply(data.target, data.args);\n        }\n        const openNative = patchMethod(XMLHttpRequestPrototype, 'open', () => function (self, args) {\n            self[XHR_SYNC] = args[2] == false;\n            self[XHR_URL] = args[1];\n            return openNative.apply(self, args);\n        });\n        const XMLHTTPREQUEST_SOURCE = 'XMLHttpRequest.send';\n        const fetchTaskAborting = zoneSymbol('fetchTaskAborting');\n        const fetchTaskScheduling = zoneSymbol('fetchTaskScheduling');\n        const sendNative = patchMethod(XMLHttpRequestPrototype, 'send', () => function (self, args) {\n            if (Zone.current[fetchTaskScheduling] === true) {\n                // a fetch is scheduling, so we are using xhr to polyfill fetch\n                // and because we already schedule macroTask for fetch, we should\n                // not schedule a macroTask for xhr again\n                return sendNative.apply(self, args);\n            }\n            if (self[XHR_SYNC]) {\n                // if the XHR is sync there is no task to schedule, just execute the code.\n                return sendNative.apply(self, args);\n            }\n            else {\n                const options = { target: self, url: self[XHR_URL], isPeriodic: false, args: args, aborted: false };\n                const task = scheduleMacroTaskWithCurrentZone(XMLHTTPREQUEST_SOURCE, placeholderCallback, options, scheduleTask, clearTask);\n                if (self && self[XHR_ERROR_BEFORE_SCHEDULED] === true && !options.aborted &&\n                    task.state === SCHEDULED) {\n                    // xhr request throw error when send\n                    // we should invoke task instead of leaving a scheduled\n                    // pending macroTask\n                    task.invoke();\n                }\n            }\n        });\n        const abortNative = patchMethod(XMLHttpRequestPrototype, 'abort', () => function (self, args) {\n            const task = findPendingTask(self);\n            if (task && typeof task.type == 'string') {\n                // If the XHR has already completed, do nothing.\n                // If the XHR has already been aborted, do nothing.\n                // Fix #569, call abort multiple times before done will cause\n                // macroTask task count be negative number\n                if (task.cancelFn == null || (task.data && task.data.aborted)) {\n                    return;\n                }\n                task.zone.cancelTask(task);\n            }\n            else if (Zone.current[fetchTaskAborting] === true) {\n                // the abort is called from fetch polyfill, we need to call native abort of XHR.\n                return abortNative.apply(self, args);\n            }\n            // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no\n            // task\n            // to cancel. Do nothing.\n        });\n    }\n});\nZone.__load_patch('geolocation', (global) => {\n    /// GEO_LOCATION\n    if (global['navigator'] && global['navigator'].geolocation) {\n        patchPrototype(global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);\n    }\n});\nZone.__load_patch('PromiseRejectionEvent', (global, Zone) => {\n    // handle unhandled promise rejection\n    function findPromiseRejectionHandler(evtName) {\n        return function (e) {\n            const eventTasks = findEventTasks(global, evtName);\n            eventTasks.forEach(eventTask => {\n                // windows has added unhandledrejection event listener\n                // trigger the event listener\n                const PromiseRejectionEvent = global['PromiseRejectionEvent'];\n                if (PromiseRejectionEvent) {\n                    const evt = new PromiseRejectionEvent(evtName, { promise: e.promise, reason: e.rejection });\n                    eventTask.invoke(evt);\n                }\n            });\n        };\n    }\n    if (global['PromiseRejectionEvent']) {\n        Zone[zoneSymbol('unhandledPromiseRejectionHandler')] =\n            findPromiseRejectionHandler('unhandledrejection');\n        Zone[zoneSymbol('rejectionHandledHandler')] =\n            findPromiseRejectionHandler('rejectionhandled');\n    }\n});\n"]}